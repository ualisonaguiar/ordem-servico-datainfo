<?php

namespace InepZend\Util;

use InepZend\UnitTest\AbstractUnitTest;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-08-12 at 17:32:39.
 */
class HtmlTest extends AbstractUnitTest
{

    /**
     * Generated from @assert ('<', false) === '<'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter()
    {
        $this->assertSame(
                '<'
                , \InepZend\Util\Html::convertCharacter('<', false)
        );
    }

    /**
     * Generated from @assert ('©', false) === '&copy;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter2()
    {
        $this->assertSame(
                '&copy;'
                , \InepZend\Util\Html::convertCharacter('©', false)
        );
    }

    /**
     * Generated from @assert ('ç', false) === '&ccedil;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter3()
    {
        $this->assertSame(
                '&ccedil;'
                , \InepZend\Util\Html::convertCharacter('ç', false)
        );
    }

    /**
     * Generated from @assert ('&lt;', false) === '&amp;lt;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter4()
    {
        $this->assertSame(
                '&amp;lt;'
                , \InepZend\Util\Html::convertCharacter('&lt;', false)
        );
    }

    /**
     * Generated from @assert ('&copy;', false) === '&amp;copy;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter5()
    {
        $this->assertSame(
                '&amp;copy;'
                , \InepZend\Util\Html::convertCharacter('&copy;', false)
        );
    }

    /**
     * Generated from @assert ('&ccedil;', false) === '&amp;ccedil;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter6()
    {
        $this->assertSame(
                '&amp;ccedil;'
                , \InepZend\Util\Html::convertCharacter('&ccedil;', false)
        );
    }

    /**
     * Generated from @assert ('ok', false) === 'ok'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter7()
    {
        $this->assertSame(
                'ok'
                , \InepZend\Util\Html::convertCharacter('ok', false)
        );
    }

    /**
     * Generated from @assert ('<', true, false) === '&lt;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter8()
    {
        $this->assertSame(
                '&lt;'
                , \InepZend\Util\Html::convertCharacter('<', true, false)
        );
    }

    /**
     * Generated from @assert ('©', true, false) === '&copy;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter9()
    {
        $this->assertSame(
                '&copy;'
                , \InepZend\Util\Html::convertCharacter('©', true, false)
        );
    }

    /**
     * Generated from @assert ('ç', true, false) === '&ccedil;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter10()
    {
        $this->assertSame(
                '&ccedil;'
                , \InepZend\Util\Html::convertCharacter('ç', true, false)
        );
    }

    /**
     * Generated from @assert ('&lt;', true, false) === '&amp;lt;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter11()
    {
        $this->assertSame(
                '&amp;lt;'
                , \InepZend\Util\Html::convertCharacter('&lt;', true, false)
        );
    }

    /**
     * Generated from @assert ('&copy;', true, false) === '&amp;copy;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter12()
    {
        $this->assertSame(
                '&amp;copy;'
                , \InepZend\Util\Html::convertCharacter('&copy;', true, false)
        );
    }

    /**
     * Generated from @assert ('&ccedil;', true, false) === '&amp;ccedil;'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter13()
    {
        $this->assertSame(
                '&amp;ccedil;'
                , \InepZend\Util\Html::convertCharacter('&ccedil;', true, false)
        );
    }

    /**
     * Generated from @assert ('ok', true, false) === 'ok'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter14()
    {
        $this->assertSame(
                'ok'
                , \InepZend\Util\Html::convertCharacter('ok', true, false)
        );
    }

    /**
     * Generated from @assert ('<', true, true) === '<'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter15()
    {
        $this->assertSame(
                '<'
                , \InepZend\Util\Html::convertCharacter('<', true, true)
        );
    }

    /**
     * Generated from @assert ('©', true, true) === '©'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter16()
    {
        $this->assertSame(
                '©'
                , \InepZend\Util\Html::convertCharacter('©', true, true)
        );
    }

    /**
     * Generated from @assert ('ç', true, true) === 'ç'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter17()
    {
        $this->assertSame(
                'ç'
                , \InepZend\Util\Html::convertCharacter('ç', true, true)
        );
    }

    /**
     * Generated from @assert ('&lt;', true, true) === '<'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter18()
    {
        $this->assertSame(
                '<'
                , \InepZend\Util\Html::convertCharacter('&lt;', true, true)
        );
    }

    /**
     * Generated from @assert ('&copy;', true, true) === '©'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter19()
    {
        $this->assertSame(
                '©'
                , \InepZend\Util\Html::convertCharacter('&copy;', true, true)
        );
    }

    /**
     * Generated from @assert ('&ccedil;', true, true) === 'ç'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter20()
    {
        $this->assertSame(
                'ç'
                , \InepZend\Util\Html::convertCharacter('&ccedil;', true, true)
        );
    }

    /**
     * Generated from @assert ('ok', true, true) === 'ok'.
     *
     * @covers \InepZend\Util\Html::convertCharacter
     */
    public function testConvertCharacter21()
    {
        $this->assertSame(
                'ok'
                , \InepZend\Util\Html::convertCharacter('ok', true, true)
        );
    }

    /**
     * Generated from @assert ('<') === '<'.
     *
     * @covers \InepZend\Util\Html::convertAccent
     */
    public function testConvertAccent()
    {
        $this->assertSame(
                '<'
                , \InepZend\Util\Html::convertAccent('<')
        );
    }

    /**
     * Generated from @assert ('©') === '&copy;'.
     *
     * @covers \InepZend\Util\Html::convertAccent
     */
    public function testConvertAccent2()
    {
        $this->assertSame(
                '&copy;'
                , \InepZend\Util\Html::convertAccent('©')
        );
    }

    /**
     * Generated from @assert ('ç') === '&ccedil;'.
     *
     * @covers \InepZend\Util\Html::convertAccent
     */
    public function testConvertAccent3()
    {
        $this->assertSame(
                '&ccedil;'
                , \InepZend\Util\Html::convertAccent('ç')
        );
    }

    /**
     * Generated from @assert ('&lt;') === '&amp;lt;'.
     *
     * @covers \InepZend\Util\Html::convertAccent
     */
    public function testConvertAccent4()
    {
        $this->assertSame(
                '&amp;lt;'
                , \InepZend\Util\Html::convertAccent('&lt;')
        );
    }

    /**
     * Generated from @assert ('&copy;') === '&amp;copy;'.
     *
     * @covers \InepZend\Util\Html::convertAccent
     */
    public function testConvertAccent5()
    {
        $this->assertSame(
                '&amp;copy;'
                , \InepZend\Util\Html::convertAccent('&copy;')
        );
    }

    /**
     * Generated from @assert ('&ccedil;') === '&amp;ccedil;'.
     *
     * @covers \InepZend\Util\Html::convertAccent
     */
    public function testConvertAccent6()
    {
        $this->assertSame(
                '&amp;ccedil;'
                , \InepZend\Util\Html::convertAccent('&ccedil;')
        );
    }

    /**
     * Generated from @assert ('ok') === 'ok'.
     *
     * @covers \InepZend\Util\Html::convertAccent
     */
    public function testConvertAccent7()
    {
        $this->assertSame(
                'ok'
                , \InepZend\Util\Html::convertAccent('ok')
        );
    }

    /**
     * Generated from @assert ('<') === '<'.
     *
     * @covers \InepZend\Util\Html::convertHtmlToText
     */
    public function testConvertHtmlToText()
    {
        $this->assertSame(
                '<'
                , \InepZend\Util\Html::convertHtmlToText('<')
        );
    }

    /**
     * Generated from @assert ('©') === '©'.
     *
     * @covers \InepZend\Util\Html::convertHtmlToText
     */
    public function testConvertHtmlToText2()
    {
        $this->assertSame(
                '©'
                , \InepZend\Util\Html::convertHtmlToText('©')
        );
    }

    /**
     * Generated from @assert ('ç') === 'ç'.
     *
     * @covers \InepZend\Util\Html::convertHtmlToText
     */
    public function testConvertHtmlToText3()
    {
        $this->assertSame(
                'ç'
                , \InepZend\Util\Html::convertHtmlToText('ç')
        );
    }

    /**
     * Generated from @assert ('&lt;') === '<'.
     *
     * @covers \InepZend\Util\Html::convertHtmlToText
     */
    public function testConvertHtmlToText4()
    {
        $this->assertSame(
                '<'
                , \InepZend\Util\Html::convertHtmlToText('&lt;')
        );
    }

    /**
     * Generated from @assert ('&copy;') === '©'.
     *
     * @covers \InepZend\Util\Html::convertHtmlToText
     */
    public function testConvertHtmlToText5()
    {
        $this->assertSame(
                '©'
                , \InepZend\Util\Html::convertHtmlToText('&copy;')
        );
    }

    /**
     * Generated from @assert ('&ccedil;') === 'ç'.
     *
     * @covers \InepZend\Util\Html::convertHtmlToText
     */
    public function testConvertHtmlToText6()
    {
        $this->assertSame(
                'ç'
                , \InepZend\Util\Html::convertHtmlToText('&ccedil;')
        );
    }

    /**
     * Generated from @assert ('ok') === 'ok'.
     *
     * @covers \InepZend\Util\Html::convertHtmlToText
     */
    public function testConvertHtmlToText7()
    {
        $this->assertSame(
                'ok'
                , \InepZend\Util\Html::convertHtmlToText('ok')
        );
    }

    /**
     * Generated from @assert ('&amp;lt;') === '&lt;'.
     *
     * @covers \InepZend\Util\Html::convertHtmlToText
     */
    public function testConvertHtmlToText8()
    {
        $this->assertSame(
                '&lt;'
                , \InepZend\Util\Html::convertHtmlToText('&amp;lt;')
        );
    }

    /**
     * Generated from @assert (null) === array().
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray()
    {
        $this->assertSame(
                array()
                , \InepZend\Util\Html::getCssTextArray(null)
        );
    }

    /**
     * Generated from @assert ('') === array().
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray2()
    {
        $this->assertSame(
                array()
                , \InepZend\Util\Html::getCssTextArray('')
        );
    }

    /**
     * Generated from @assert ('display') === array().
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray3()
    {
        $this->assertSame(
                array()
                , \InepZend\Util\Html::getCssTextArray('display')
        );
    }

    /**
     * Generated from @assert ('display;') === array().
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray4()
    {
        $this->assertSame(
                array()
                , \InepZend\Util\Html::getCssTextArray('display;')
        );
    }

    /**
     * Generated from @assert ('display:') === array('display' => '').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray5()
    {
        $this->assertSame(
                array('display' => '')
                , \InepZend\Util\Html::getCssTextArray('display:')
        );
    }

    /**
     * Generated from @assert ('display: none') === array('display' => 'none').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray6()
    {
        $this->assertSame(
                array('display' => 'none')
                , \InepZend\Util\Html::getCssTextArray('display: none')
        );
    }

    /**
     * Generated from @assert ('display: none; float: left') === array('display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray7()
    {
        $this->assertSame(
                array('display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display: none; float: left')
        );
    }

    /**
     * Generated from @assert ('display:none') === array('display' => 'none').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray8()
    {
        $this->assertSame(
                array('display' => 'none')
                , \InepZend\Util\Html::getCssTextArray('display:none')
        );
    }

    /**
     * Generated from @assert ('display:none; float:left') === array('display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray9()
    {
        $this->assertSame(
                array('display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display:none; float:left')
        );
    }

    /**
     * Generated from @assert ('display:none;float:left') === array('display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray10()
    {
        $this->assertSame(
                array('display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display:none;float:left')
        );
    }

    /**
     * Generated from @assert ('display: none;') === array('display' => 'none').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray11()
    {
        $this->assertSame(
                array('display' => 'none')
                , \InepZend\Util\Html::getCssTextArray('display: none;')
        );
    }

    /**
     * Generated from @assert ('display: none; float: left;') === array('display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray12()
    {
        $this->assertSame(
                array('display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display: none; float: left;')
        );
    }

    /**
     * Generated from @assert ('display:none;') === array('display' => 'none').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray13()
    {
        $this->assertSame(
                array('display' => 'none')
                , \InepZend\Util\Html::getCssTextArray('display:none;')
        );
    }

    /**
     * Generated from @assert ('display:none; float:left;') === array('display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray14()
    {
        $this->assertSame(
                array('display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display:none; float:left;')
        );
    }

    /**
     * Generated from @assert ('display:none;float:left;') === array('display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray15()
    {
        $this->assertSame(
                array('display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display:none;float:left;')
        );
    }

    /**
     * Generated from @assert ('display: none;', array('display' => 'block')) === array('display' => 'none').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray16()
    {
        $this->assertSame(
                array('display' => 'none')
                , \InepZend\Util\Html::getCssTextArray('display: none;', array('display' => 'block'))
        );
    }

    /**
     * Generated from @assert ('display: none; float: left;', array('display' => 'block')) === array('display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray17()
    {
        $this->assertSame(
                array('display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display: none; float: left;', array('display' => 'block'))
        );
    }

    /**
     * Generated from @assert ('display:none;', array('display' => 'block')) === array('display' => 'none').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray18()
    {
        $this->assertSame(
                array('display' => 'none')
                , \InepZend\Util\Html::getCssTextArray('display:none;', array('display' => 'block'))
        );
    }

    /**
     * Generated from @assert ('display:none; float:left;', array('display' => 'block')) === array('display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray19()
    {
        $this->assertSame(
                array('display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display:none; float:left;', array('display' => 'block'))
        );
    }

    /**
     * Generated from @assert ('display:none;float:left;', array('display' => 'block')) === array('display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray20()
    {
        $this->assertSame(
                array('display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display:none;float:left;', array('display' => 'block'))
        );
    }

    /**
     * Generated from @assert ('display: none;', array('align' => 'center')) === array('align' => 'center', 'display' => 'none').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray21()
    {
        $this->assertSame(
                array('align' => 'center', 'display' => 'none')
                , \InepZend\Util\Html::getCssTextArray('display: none;', array('align' => 'center'))
        );
    }

    /**
     * Generated from @assert ('display: none; float: left;', array('align' => 'center')) === array('align' => 'center', 'display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray22()
    {
        $this->assertSame(
                array('align' => 'center', 'display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display: none; float: left;', array('align' => 'center'))
        );
    }

    /**
     * Generated from @assert ('display:none;', array('align' => 'center')) === array('align' => 'center', 'display' => 'none').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray23()
    {
        $this->assertSame(
                array('align' => 'center', 'display' => 'none')
                , \InepZend\Util\Html::getCssTextArray('display:none;', array('align' => 'center'))
        );
    }

    /**
     * Generated from @assert ('display:none; float:left;', array('align' => 'center')) === array('align' => 'center', 'display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray24()
    {
        $this->assertSame(
                array('align' => 'center', 'display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display:none; float:left;', array('align' => 'center'))
        );
    }

    /**
     * Generated from @assert ('display:none;float:left;', array('align' => 'center')) === array('align' => 'center', 'display' => 'none', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray25()
    {
        $this->assertSame(
                array('align' => 'center', 'display' => 'none', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display:none;float:left;', array('align' => 'center'))
        );
    }

    /**
     * Generated from @assert ('display: none;', array('display' => 'block', 'align' => 'center')) === array('display' => 'none', 'align' => 'center').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray26()
    {
        $this->assertSame(
                array('display' => 'none', 'align' => 'center')
                , \InepZend\Util\Html::getCssTextArray('display: none;', array('display' => 'block', 'align' => 'center'))
        );
    }

    /**
     * Generated from @assert ('display: none; float: left;', array('display' => 'block', 'align' => 'center')) === array('display' => 'none', 'align' => 'center', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray27()
    {
        $this->assertSame(
                array('display' => 'none', 'align' => 'center', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display: none; float: left;', array('display' => 'block', 'align' => 'center'))
        );
    }

    /**
     * Generated from @assert ('display:none;', array('display' => 'block', 'align' => 'center')) === array('display' => 'none', 'align' => 'center').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray28()
    {
        $this->assertSame(
                array('display' => 'none', 'align' => 'center')
                , \InepZend\Util\Html::getCssTextArray('display:none;', array('display' => 'block', 'align' => 'center'))
        );
    }

    /**
     * Generated from @assert ('display:none; float:left;', array('display' => 'block', 'align' => 'center')) === array('display' => 'none', 'align' => 'center', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray29()
    {
        $this->assertSame(
                array('display' => 'none', 'align' => 'center', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display:none; float:left;', array('display' => 'block', 'align' => 'center'))
        );
    }

    /**
     * Generated from @assert ('display:none;float:left;', array('display' => 'block', 'align' => 'center')) === array('display' => 'none', 'align' => 'center', 'float' => 'left').
     *
     * @covers \InepZend\Util\Html::getCssTextArray
     */
    public function testGetCssTextArray30()
    {
        $this->assertSame(
                array('display' => 'none', 'align' => 'center', 'float' => 'left')
                , \InepZend\Util\Html::getCssTextArray('display:none;float:left;', array('display' => 'block', 'align' => 'center'))
        );
    }

}
