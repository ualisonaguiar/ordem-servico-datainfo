<?php

namespace InepZend\Util;

use InepZend\UnitTest\AbstractUnitTest;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-08-12 at 18:39:32.
 */
class MathTest extends AbstractUnitTest
{

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation()
    {
        $this->assertSame(
                false
                , \InepZend\Util\Math::loopOperation()
        );
    }

    /**
     * Generated from @assert (null, null, null, null) === false.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\Math::loopOperation(null, null, null, null)
        );
    }

    /**
     * Generated from @assert ('a', '+', 2, 1) === false.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\Math::loopOperation('a', '+', 2, 1)
        );
    }

    /**
     * Generated from @assert (8, '+', 2, 'a') === false.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation4()
    {
        $this->assertSame(
                false
                , \InepZend\Util\Math::loopOperation(8, '+', 2, 'a')
        );
    }

    /**
     * Generated from @assert (80, '+', 3, 2) === 86.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation5()
    {
        $this->assertSame(
                86
                , \InepZend\Util\Math::loopOperation(80, '+', 3, 2)
        );
    }

    /**
     * Generated from @assert ((80 * 2), '+', (3 * 8), 2) === 208.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation6()
    {
        $this->assertSame(
                208
                , \InepZend\Util\Math::loopOperation((80 * 2), '+', (3 * 8), 2)
        );
    }

    /**
     * Generated from @assert ('(80 * 2)', '+', '(3 * 8)', '2') === 208.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation7()
    {
        $this->assertSame(
                208
                , \InepZend\Util\Math::loopOperation('(80 * 2)', '+', '(3 * 8)', '2')
        );
    }

    /**
     * Generated from @assert (80, '-', 3, 2) === 74.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation8()
    {
        $this->assertSame(
                74
                , \InepZend\Util\Math::loopOperation(80, '-', 3, 2)
        );
    }

    /**
     * Generated from @assert ((80 * 2), '-', (3 * 8), 2) === 112.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation9()
    {
        $this->assertSame(
                112
                , \InepZend\Util\Math::loopOperation((80 * 2), '-', (3 * 8), 2)
        );
    }

    /**
     * Generated from @assert ('(80 * 2)', '-', '(3 * 8)', '2') === 112.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation10()
    {
        $this->assertSame(
                112
                , \InepZend\Util\Math::loopOperation('(80 * 2)', '-', '(3 * 8)', '2')
        );
    }

    /**
     * Generated from @assert (3, '-', 80, 2) === -157.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation11()
    {
        $this->assertSame(
                -157
                , \InepZend\Util\Math::loopOperation(3, '-', 80, 2)
        );
    }

    /**
     * Generated from @assert ((3 * 8), '-', (80 * 2), 2) === -296.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation12()
    {
        $this->assertSame(
                -296
                , \InepZend\Util\Math::loopOperation((3 * 8), '-', (80 * 2), 2)
        );
    }

    /**
     * Generated from @assert ('(3 * 8)', '-', '(80 * 2)', '2') === -296.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation13()
    {
        $this->assertSame(
                -296
                , \InepZend\Util\Math::loopOperation('(3 * 8)', '-', '(80 * 2)', '2')
        );
    }

    /**
     * Generated from @assert (80, '*', 3, 2) === 720.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation14()
    {
        $this->assertSame(
                720
                , \InepZend\Util\Math::loopOperation(80, '*', 3, 2)
        );
    }

    /**
     * Generated from @assert ((80 * 2), '*', (3 * 8), 2) === 92160.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation15()
    {
        $this->assertSame(
                92160
                , \InepZend\Util\Math::loopOperation((80 * 2), '*', (3 * 8), 2)
        );
    }

    /**
     * Generated from @assert ('(80 * 2)', '*', '(3 * 8)', '2') === 92160.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation16()
    {
        $this->assertSame(
                92160
                , \InepZend\Util\Math::loopOperation('(80 * 2)', '*', '(3 * 8)', '2')
        );
    }

    /**
     * Generated from @assert (80, '/', 3, 2) === 8.8888888888889.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation17()
    {
        $this->assertSame(
                8.8888888888889
                , \InepZend\Util\Math::loopOperation(80, '/', 3, 2)
        );
    }

    /**
     * Generated from @assert ((80 * 2), '/', (3 * 8), 2) === 0.27777777777778.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation18()
    {
        $this->assertSame(
                0.27777777777778
                , \InepZend\Util\Math::loopOperation((80 * 2), '/', (3 * 8), 2)
        );
    }

    /**
     * Generated from @assert ('(80 * 2)', '/', '(3 * 8)', '2') === 0.27777777777778.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation19()
    {
        $this->assertSame(
                0.27777777777778
                , \InepZend\Util\Math::loopOperation('(80 * 2)', '/', '(3 * 8)', '2')
        );
    }

    /**
     * Generated from @assert (3, '/', 80, 2) === 0.00046875.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation20()
    {
        $this->assertSame(
                0.00046875
                , \InepZend\Util\Math::loopOperation(3, '/', 80, 2)
        );
    }

    /**
     * Generated from @assert ((3 * 8), '/', (80 * 2), 2) === 0.0009375.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation21()
    {
        $this->assertSame(
                0.0009375
                , \InepZend\Util\Math::loopOperation((3 * 8), '/', (80 * 2), 2)
        );
    }

    /**
     * Generated from @assert ('(3 * 8)', '/', '(80 * 2)', '2') === 0.0009375.
     *
     * @covers \InepZend\Util\Math::loopOperation
     */
    public function testLoopOperation22()
    {
        $this->assertSame(
                0.0009375
                , \InepZend\Util\Math::loopOperation('(3 * 8)', '/', '(80 * 2)', '2')
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent()
    {
        $this->assertSame(
                false
                , \InepZend\Util\Math::getPercent()
        );
    }

    /**
     * Generated from @assert (null, null) === false.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\Math::getPercent(null, null)
        );
    }

    /**
     * Generated from @assert (null, 30) === false.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\Math::getPercent(null, 30)
        );
    }

    /**
     * Generated from @assert (100, null) === false.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent4()
    {
        $this->assertSame(
                false
                , \InepZend\Util\Math::getPercent(100, null)
        );
    }

    /**
     * Generated from @assert ('a', 30) === false.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent5()
    {
        $this->assertSame(
                false
                , \InepZend\Util\Math::getPercent('a', 30)
        );
    }

    /**
     * Generated from @assert (100, 'a') === false.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent6()
    {
        $this->assertSame(
                false
                , \InepZend\Util\Math::getPercent(100, 'a')
        );
    }

    /**
     * Generated from @assert (100, 30) === 30.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent7()
    {
        $this->assertSame(
                30
                , \InepZend\Util\Math::getPercent(100, 30)
        );
    }

    /**
     * Generated from @assert (30, 100) === 333.33333333333.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent8()
    {
        $this->assertSame(
                333.33333333333
                , \InepZend\Util\Math::getPercent(30, 100)
        );
    }

    /**
     * Generated from @assert (100, 30, 0) === 30.0.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent9()
    {
        $this->assertSame(
                30.0
                , \InepZend\Util\Math::getPercent(100, 30, 0)
        );
    }

    /**
     * Generated from @assert (30, 100, 0) === 333.0.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent10()
    {
        $this->assertSame(
                333.0
                , \InepZend\Util\Math::getPercent(30, 100, 0)
        );
    }

    /**
     * Generated from @assert (100, 30, 1) === 30.0.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent11()
    {
        $this->assertSame(
                30.0
                , \InepZend\Util\Math::getPercent(100, 30, 1)
        );
    }

    /**
     * Generated from @assert (30, 100, 1) === 333.3.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent12()
    {
        $this->assertSame(
                333.3
                , \InepZend\Util\Math::getPercent(30, 100, 1)
        );
    }

    /**
     * Generated from @assert (100, 30, 2) === 30.00.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent13()
    {
        $this->assertSame(
                30.00
                , \InepZend\Util\Math::getPercent(100, 30, 2)
        );
    }

    /**
     * Generated from @assert (30, 100, 2) === 333.33.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent14()
    {
        $this->assertSame(
                333.33
                , \InepZend\Util\Math::getPercent(30, 100, 2)
        );
    }

    /**
     * Generated from @assert (123.32, 12.3) === 9.9740512487837.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent15()
    {
        $this->assertSame(
                9.9740512487837
                , \InepZend\Util\Math::getPercent(123.32, 12.3)
        );
    }

    /**
     * Generated from @assert (12.3, 123.32) === 1002.6016260163.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent16()
    {
        $this->assertSame(
                1002.6016260163
                , \InepZend\Util\Math::getPercent(12.3, 123.32)
        );
    }

    /**
     * Generated from @assert (123.32, 12.3, 0) === 10.0.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent17()
    {
        $this->assertSame(
                10.0
                , \InepZend\Util\Math::getPercent(123.32, 12.3, 0)
        );
    }

    /**
     * Generated from @assert (12.3, 123.32, 0) === 1003.0.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent18()
    {
        $this->assertSame(
                1003.0
                , \InepZend\Util\Math::getPercent(12.3, 123.32, 0)
        );
    }

    /**
     * Generated from @assert (123.32, 12.3, 1) === 10.0.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent19()
    {
        $this->assertSame(
                10.0
                , \InepZend\Util\Math::getPercent(123.32, 12.3, 1)
        );
    }

    /**
     * Generated from @assert (12.3, 123.32, 1) === 1002.6.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent20()
    {
        $this->assertSame(
                1002.6
                , \InepZend\Util\Math::getPercent(12.3, 123.32, 1)
        );
    }

    /**
     * Generated from @assert (123.32, 12.3, 2) === 9.97.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent21()
    {
        $this->assertSame(
                9.97
                , \InepZend\Util\Math::getPercent(123.32, 12.3, 2)
        );
    }

    /**
     * Generated from @assert (12.3, 123.32, 2) === 1002.60.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent22()
    {
        $this->assertSame(
                1002.60
                , \InepZend\Util\Math::getPercent(12.3, 123.32, 2)
        );
    }

    /**
     * Generated from @assert (123.32, 11.6) === 9.406422315926.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent23()
    {
        $this->assertSame(
                9.406422315926
                , \InepZend\Util\Math::getPercent(123.32, 11.6)
        );
    }

    /**
     * Generated from @assert (11.6, 123.32) === 1063.1034482759.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent24()
    {
        $this->assertSame(
                1063.1034482759
                , \InepZend\Util\Math::getPercent(11.6, 123.32)
        );
    }

    /**
     * Generated from @assert (123.32, 11.6, 0) === 9.0.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent25()
    {
        $this->assertSame(
                9.0
                , \InepZend\Util\Math::getPercent(123.32, 11.6, 0)
        );
    }

    /**
     * Generated from @assert (11.6, 123.32, 0) === 1063.0.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent26()
    {
        $this->assertSame(
                1063.0
                , \InepZend\Util\Math::getPercent(11.6, 123.32, 0)
        );
    }

    /**
     * Generated from @assert (123.32, 11.6, 1) === 9.4.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent27()
    {
        $this->assertSame(
                9.4
                , \InepZend\Util\Math::getPercent(123.32, 11.6, 1)
        );
    }

    /**
     * Generated from @assert (11.6, 123.32, 1) === 1063.1.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent28()
    {
        $this->assertSame(
                1063.1
                , \InepZend\Util\Math::getPercent(11.6, 123.32, 1)
        );
    }

    /**
     * Generated from @assert (123.32, 11.6, 2) === 9.41.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent29()
    {
        $this->assertSame(
                9.41
                , \InepZend\Util\Math::getPercent(123.32, 11.6, 2)
        );
    }

    /**
     * Generated from @assert (11.6, 123.32, 2) === 1063.10.
     *
     * @covers \InepZend\Util\Math::getPercent
     */
    public function testGetPercent30()
    {
        $this->assertSame(
                1063.10
                , \InepZend\Util\Math::getPercent(11.6, 123.32, 2)
        );
    }

}
