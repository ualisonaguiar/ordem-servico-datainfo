<?php

namespace InepZend\Util;

use InepZend\UnitTest\AbstractUnitTest;
use InepZend\Util\PhpIni;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-08-19 at 16:35:51.
 */
class PhpIniTest extends AbstractUnitTest
{

    private $arrInicialValue = array();

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        $this->setInicialValue('AllowUrlInclude', false);
        $this->setInicialValue('DateDefaultLatitude', 31.7667);
        $this->setInicialValue('DateDefaultLongitude', 35.2333);
//        $this->setInicialValue('DateTimezone', 'America/Sao_Paulo'); // @TODO
        $this->setInicialValue('DefaultCharset', 'UTF-8');
        $this->setInicialValue('DefaultMimetype', 'text/html');
        $this->setInicialValue('DefaultSocketTimeout', 60);
        $this->setInicialValue('DisplayErrors', 0);
        $this->setInicialValue('DisplayStartupErrors', false);
        $this->setInicialValue('ErrorAppendString', '');
//        $this->setInicialValue('ErrorLog', null); //@TODO
        $this->setInicialValue('ErrorPrependString', '');
//        $this->setInicialValue('ErrorReporting', E_ALL | E_STRICT); // @TODO
        $this->setInicialValue('FileUploads', true);
        $this->setInicialValue('From', '');
        $this->setInicialValue('HtmlErrors', true);
        $this->setInicialValue('IgnoreRepeatedErrors', false);
        $this->setInicialValue('IgnoreUserAbort', false);
        $this->setInicialValue('ImplicitFlush', false);
        $this->setInicialValue('IncludePath', '\\');
        $this->setInicialValue('LogErrors', false);
        $this->setInicialValue('LogErrorsMaxLen', 1024);
        $this->setInicialValue('MemcacheAllowFailover', true);
        $this->setInicialValue('MemcacheChunkSize', 32950);
        $this->setInicialValue('MemcacheDefaultPort', 11211);
        $this->setInicialValue('MemcacheHashFunction', 'crc32');
        $this->setInicialValue('MemcacheHashStrategy', 'standard');
        $this->setInicialValue('MemcacheMaxFailoverAttempts', 20);
//        $this->setInicialValue('OpenBasedir', null); // @TODO
        $this->setInicialValue('PharExtractList', '');
//        $this->setInicialValue('PharReadOnly', true); //@OTOD
        $this->setInicialValue('PharRequireHash', true);
//        $this->setInicialValue('PostMaxSize', 8); // @TODO
        $this->setInicialValue('SendmailFrom', null);
        $this->setInicialValue('SessionCacheExpire', 180);
        $this->setInicialValue('SessionCacheLimiter', 'nocache');
        $this->setInicialValue('SessionHashFunction', 0);
        $this->setInicialValue('SessionName', 'PHPSESSID');
//        $this->setInicialValue('SessionSaveHandler', 'files'); // @TODO
        $this->setInicialValue('SessionSavePath', '');
//        $this->setInicialValue('SessionSerializeHandler', 'php');
        $this->setInicialValue('SessionUseStrictMode', false);
        $this->setInicialValue('SessionUseCookies', true);
        $this->setInicialValue('SessionUseOnlyCookies', true);
//        $this->setInicialValue('SessionUseTransSid', false); // @TODO
        $this->setInicialValue('Smtp', 'localhost');
        $this->setInicialValue('SmtpPort', 25);
        $this->setInicialValue('SoapWsdlCache', 1);
        $this->setInicialValue('SoapWsdlCacheDir', '\\');
        $this->setInicialValue('SoapWsdlCacheEnabled', true);
        $this->setInicialValue('SoapWsdlCacheLimit', 5);
        $this->setInicialValue('SoapWsdlCacheTtl', 86400);
        $this->setInicialValue('TrackErrors', false);
//        $this->setInicialValue('UploadMaxFilesize', 2); // @TODO
        $this->setInicialValue('MaxFileUploads', 20);
        $this->setInicialValue('UploadTmpDir', null);
        $this->setInicialValue('UserAgent', 'test');
        $this->setInicialValue('UserDir', null);
//        $this->setInicialValue('VariablesOrder', 'EGPCS'); // @TODO
        $this->setInicialValue('XdebugMaxNestingLevel', 100);
//        $this->setInicialValue('XdebugProfilerEnable', false); // @TODO
//        $this->setInicialValue('XdebugProfilerEnableTrigger', false); // @TODO
//        $this->setInicialValue('XdebugProfilerOutputDir', '\\'); // @TODO
//        $this->setInicialValue('XdebugProfilerOutputName', 'cachegrind.out.%p'); // @TODO
//        $this->setInicialValue('XdebugRemoteEnable', false); // @TODO
        $this->setInicialValue('XdebugRemoteHandler', 'dbgp');
        $this->setInicialValue('XdebugRemoteHost', 'localhost');
        $this->setInicialValue('XdebugRemotePort', 9000);
//        $this->setInicialValue('ZlibOutputCompression', false); // @TODO
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
        $this->rescueInicialValue('AllowUrlInclude');
        $this->rescueInicialValue('DateDefaultLatitude');
        $this->rescueInicialValue('DateDefaultLongitude');
//        $this->rescueInicialValue('DateTimezone'); // @TODO
        $this->rescueInicialValue('DefaultCharset');
        $this->rescueInicialValue('DefaultMimetype');
        $this->rescueInicialValue('DefaultSocketTimeout');
        $this->rescueInicialValue('DisplayErrors');
        $this->rescueInicialValue('DisplayStartupErrors');
        $this->rescueInicialValue('ErrorAppendString');
//        $this->rescueInicialValue('ErrorLog'); //@TODO
        $this->rescueInicialValue('ErrorPrependString');
//        $this->rescueInicialValue('ErrorReporting'); // @TODO
        $this->rescueInicialValue('FileUploads');
        $this->rescueInicialValue('From');
        $this->rescueInicialValue('HtmlErrors');
        $this->rescueInicialValue('IgnoreRepeatedErrors');
        $this->rescueInicialValue('IgnoreUserAbort');
        $this->rescueInicialValue('ImplicitFlush');
        $this->rescueInicialValue('IncludePath');
        $this->rescueInicialValue('LogErrors');
        $this->rescueInicialValue('LogErrorsMaxLen');
        $this->rescueInicialValue('MemcacheAllowFailover');
        $this->rescueInicialValue('MemcacheChunkSize');
        $this->rescueInicialValue('MemcacheDefaultPort');
        $this->rescueInicialValue('MemcacheHashFunction');
        $this->rescueInicialValue('MemcacheHashStrategy');
        $this->rescueInicialValue('MemcacheMaxFailoverAttempts');
//        $this->rescueInicialValue('OpenBasedir'); // @TODO
        $this->rescueInicialValue('PharExtractList');
//        $this->rescueInicialValue('PharReadOnly'); //@TODO
        $this->rescueInicialValue('PharRequireHash');
//        $this->rescueInicialValue('PostMaxSize'); // @TODO
        $this->rescueInicialValue('SendmailFrom');
        $this->rescueInicialValue('SessionCacheExpire');
        $this->rescueInicialValue('SessionCacheLimiter');
        $this->rescueInicialValue('SessionHashFunction');
        $this->rescueInicialValue('SessionName');
//        $this->rescueInicialValue('SessionSaveHandler'); // @TODO
        $this->rescueInicialValue('SessionSavePath');
//        $this->rescueInicialValue('SessionSerializeHandler'); // @TODO
        $this->rescueInicialValue('SessionUseStrictMode');
        $this->rescueInicialValue('SessionUseCookies');
        $this->rescueInicialValue('SessionUseOnlyCookies');
//        $this->rescueInicialValue('SessionUseTransSid'); // @TODO
        $this->rescueInicialValue('Smtp');
        $this->rescueInicialValue('SmtpPort');
        $this->rescueInicialValue('SoapWsdlCache');
        $this->rescueInicialValue('SoapWsdlCacheDir');
        $this->rescueInicialValue('SoapWsdlCacheEnabled');
        $this->rescueInicialValue('SoapWsdlCacheLimit');
        $this->rescueInicialValue('SoapWsdlCacheTtl');
        $this->rescueInicialValue('TrackErrors');
//        $this->rescueInicialValue('UploadMaxFilesize'); // @TODO
        $this->rescueInicialValue('MaxFileUploads');
        $this->rescueInicialValue('UploadTmpDir');
        $this->rescueInicialValue('UserAgent');
        $this->rescueInicialValue('UserDir');
//        $this->rescueInicialValue('VariablesOrder'); // @TODO
        $this->rescueInicialValue('XdebugMaxNestingLevel');
//        $this->rescueInicialValue('XdebugProfilerEnable'); // @TODO
//        $this->rescueInicialValue('XdebugProfilerEnableTrigger'); // @TODO
//        $this->rescueInicialValue('XdebugProfilerOutputDir'); // @TODO
//        $this->rescueInicialValue('XdebugProfilerOutputName'); // @TODO
//        $this->rescueInicialValue('XdebugRemoteEnable'); // @TODO
        $this->rescueInicialValue('XdebugRemoteHandler');
        $this->rescueInicialValue('XdebugRemoteHost');
        $this->rescueInicialValue('XdebugRemotePort');
//        $this->rescueInicialValue('ZlibOutputCompression'); // @TODO
    }

    private function setInicialValue($strPartMethod = null, $mixNewValue = null)
    {
        if (empty($strPartMethod))
            return false;
        $strGetMethod = 'get' . $strPartMethod;
        $strSetMethod = 'set' . $strPartMethod;
        $this->arrInicialValue[$strPartMethod] = PhpIni::$strGetMethod();
        PhpIni::$strSetMethod($mixNewValue);
        return true;
    }

    private function rescueInicialValue($strPartMethod = null)
    {
        if ((empty($strPartMethod)) || (!array_key_exists($strPartMethod, $this->arrInicialValue)))
            return false;
        $strSetMethod = 'set' . $strPartMethod;
        PhpIni::$strSetMethod($this->arrInicialValue[$strPartMethod]);
        return true;
    }

    /**
     * Generated from @assert () === 128.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory()
    {
        $this->assertSame(
                128
                , \InepZend\Util\PhpIni::allocatesMemory()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::allocatesMemory(null)
        );
    }

    /**
     * Generated from @assert (1024) === 1024.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory3()
    {
        $this->assertSame(
                1024
                , \InepZend\Util\PhpIni::allocatesMemory(1024)
        );
    }

    /**
     * Generated from @assert ('1025M') === 1025.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory4()
    {
        $this->assertSame(
                1025
                , \InepZend\Util\PhpIni::allocatesMemory('1025M')
        );
    }

    /**
     * Generated from @assert ('1026Mb') === 1026.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory5()
    {
        $this->assertSame(
                1026
                , \InepZend\Util\PhpIni::allocatesMemory('1026Mb')
        );
    }

    /**
     * Generated from @assert (1027, \InepZend\Util\PhpIni::OPERATION_EXACT) === 1027.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory6()
    {
        $this->assertSame(
                1027
                , \InepZend\Util\PhpIni::allocatesMemory(1027, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert ('1028M', \InepZend\Util\PhpIni::OPERATION_EXACT) === 1028.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory7()
    {
        $this->assertSame(
                1028
                , \InepZend\Util\PhpIni::allocatesMemory('1028M', \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert ('1029Mb', \InepZend\Util\PhpIni::OPERATION_EXACT) === 1029.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory8()
    {
        $this->assertSame(
                1029
                , \InepZend\Util\PhpIni::allocatesMemory('1029Mb', \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert ('1030DefaultUnit', \InepZend\Util\PhpIni::OPERATION_EXACT) === 1030.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory9()
    {
        $this->assertSame(
                1030
                , \InepZend\Util\PhpIni::allocatesMemory('1030DefaultUnit', \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (1031, \InepZend\Util\PhpIni::OPERATION_PLUS) === 2061.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory10()
    {
        $this->assertSame(
                2061
                , \InepZend\Util\PhpIni::allocatesMemory(1031, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert ('1032M', \InepZend\Util\PhpIni::OPERATION_PLUS) === 3093.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory11()
    {
        $this->assertSame(
                3093
                , \InepZend\Util\PhpIni::allocatesMemory('1032M', \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert ('1033Mb', \InepZend\Util\PhpIni::OPERATION_PLUS) === 4126.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory12()
    {
        $this->assertSame(
                4126
                , \InepZend\Util\PhpIni::allocatesMemory('1033Mb', \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert ('1034DefaultUnit', \InepZend\Util\PhpIni::OPERATION_PLUS) === 5160.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory13()
    {
        $this->assertSame(
                5160
                , \InepZend\Util\PhpIni::allocatesMemory('1034DefaultUnit', \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert (-1) === -1.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory14()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::allocatesMemory(-1)
        );
    }

    /**
     * Generated from @assert ('-1') === -1.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory15()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::allocatesMemory('-1')
        );
    }

    /**
     * Generated from @assert ('-1', \InepZend\Util\PhpIni::OPERATION_EXACT) === -1.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory16()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::allocatesMemory('-1', \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert ('-1', \InepZend\Util\PhpIni::OPERATION_PLUS) === -1.
     *
     * @covers \InepZend\Util\PhpIni::allocatesMemory
     */
    public function testAllocatesMemory17()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::allocatesMemory('-1', \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === -1.
     *
     * @covers \InepZend\Util\PhpIni::getMemoryAllocated
     */
    public function testGetMemoryAllocated()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::getMemoryAllocated()
        );
    }

    /**
     * Generated from @assert () === 60.
     *
     * @covers \InepZend\Util\PhpIni::setTimeLimit
     */
    public function testSetTimeLimit()
    {
        $this->assertSame(
                60
                , \InepZend\Util\PhpIni::setTimeLimit()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setTimeLimit
     */
    public function testSetTimeLimit2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setTimeLimit(null)
        );
    }

    /**
     * Generated from @assert (60) === 60.
     *
     * @covers \InepZend\Util\PhpIni::setTimeLimit
     */
    public function testSetTimeLimit3()
    {
        $this->assertSame(
                60
                , \InepZend\Util\PhpIni::setTimeLimit(60)
        );
    }

    /**
     * Generated from @assert (61, \InepZend\Util\PhpIni::OPERATION_EXACT) === 61.
     *
     * @covers \InepZend\Util\PhpIni::setTimeLimit
     */
    public function testSetTimeLimit4()
    {
        $this->assertSame(
                61
                , \InepZend\Util\PhpIni::setTimeLimit(61, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (62, \InepZend\Util\PhpIni::OPERATION_PLUS) === 123.
     *
     * @covers \InepZend\Util\PhpIni::setTimeLimit
     */
    public function testSetTimeLimit5()
    {
        $this->assertSame(
                123
                , \InepZend\Util\PhpIni::setTimeLimit(62, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert (0) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setTimeLimit
     */
    public function testSetTimeLimit6()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setTimeLimit(0)
        );
    }

    /**
     * Generated from @assert (0, \InepZend\Util\PhpIni::OPERATION_EXACT) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setTimeLimit
     */
    public function testSetTimeLimit7()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setTimeLimit(0, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (0, \InepZend\Util\PhpIni::OPERATION_PLUS) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setTimeLimit
     */
    public function testSetTimeLimit8()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setTimeLimit(0, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === 0.
     *
     * @covers \InepZend\Util\PhpIni::getTimeLimit
     */
    public function testGetTimeLimit()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::getTimeLimit()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setAllowUrlInclude
     */
    public function testSetAllowUrlInclude()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setAllowUrlInclude()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setAllowUrlInclude
     */
    public function testSetAllowUrlInclude2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setAllowUrlInclude(null)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setAllowUrlInclude
     */
    public function testSetAllowUrlInclude3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setAllowUrlInclude(false)
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::getAllowUrlInclude
     */
    public function testGetAllowUrlInclude()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::getAllowUrlInclude()
        );
    }

    /**
     * Generated from @assert () === 0.0.
     *
     * @covers \InepZend\Util\PhpIni::setDateDefaultLatitude
     */
    public function testSetDateDefaultLatitude()
    {
        $this->assertSame(
                0.0
                , \InepZend\Util\PhpIni::setDateDefaultLatitude()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setDateDefaultLatitude
     */
    public function testSetDateDefaultLatitude2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDateDefaultLatitude(null)
        );
    }

    /**
     * Generated from @assert (32.0000) === 32.0000.
     *
     * @covers \InepZend\Util\PhpIni::setDateDefaultLatitude
     */
    public function testSetDateDefaultLatitude3()
    {
        $this->assertSame(
                32.0000
                , \InepZend\Util\PhpIni::setDateDefaultLatitude(32.0000)
        );
    }

    /**
     * Generated from @assert (35.0000, \InepZend\Util\PhpIni::OPERATION_EXACT) === 35.0.
     *
     * @covers \InepZend\Util\PhpIni::setDateDefaultLatitude
     */
    public function testSetDateDefaultLatitude4()
    {
        $this->assertSame(
                35.0
                , \InepZend\Util\PhpIni::setDateDefaultLatitude(35.0000, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (1.0000, \InepZend\Util\PhpIni::OPERATION_PLUS) === 36.0.
     *
     * @covers \InepZend\Util\PhpIni::setDateDefaultLatitude
     */
    public function testSetDateDefaultLatitude5()
    {
        $this->assertSame(
                36.0
                , \InepZend\Util\PhpIni::setDateDefaultLatitude(1.0000, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === 36.0.
     *
     * @covers \InepZend\Util\PhpIni::getDateDefaultLatitude
     */
    public function testGetDateDefaultLatitude()
    {
        $this->assertSame(
                36.0
                , \InepZend\Util\PhpIni::getDateDefaultLatitude()
        );
    }

    /**
     * Generated from @assert () === 0.0.
     *
     * @covers \InepZend\Util\PhpIni::setDateDefaultLongitude
     */
    public function testSetDateDefaultLongitude()
    {
        $this->assertSame(
                0.0
                , \InepZend\Util\PhpIni::setDateDefaultLongitude()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setDateDefaultLongitude
     */
    public function testSetDateDefaultLongitude2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDateDefaultLongitude(null)
        );
    }

    /**
     * Generated from @assert (36.0000) === 36.0000.
     *
     * @covers \InepZend\Util\PhpIni::setDateDefaultLongitude
     */
    public function testSetDateDefaultLongitude3()
    {
        $this->assertSame(
                36.0000
                , \InepZend\Util\PhpIni::setDateDefaultLongitude(36.0000)
        );
    }

    /**
     * Generated from @assert (39.0000, \InepZend\Util\PhpIni::OPERATION_EXACT) === 39.0.
     *
     * @covers \InepZend\Util\PhpIni::setDateDefaultLongitude
     */
    public function testSetDateDefaultLongitude4()
    {
        $this->assertSame(
                39.0
                , \InepZend\Util\PhpIni::setDateDefaultLongitude(39.0000, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (1.0000, \InepZend\Util\PhpIni::OPERATION_PLUS) === 40.0.
     *
     * @covers \InepZend\Util\PhpIni::setDateDefaultLongitude
     */
    public function testSetDateDefaultLongitude5()
    {
        $this->assertSame(
                40.0
                , \InepZend\Util\PhpIni::setDateDefaultLongitude(1.0000, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === 40.0.
     *
     * @covers \InepZend\Util\PhpIni::getDateDefaultLongitude
     */
    public function testGetDateDefaultLongitude()
    {
        $this->assertSame(
                40.0
                , \InepZend\Util\PhpIni::getDateDefaultLongitude()
        );
    }

    /**
     * Generated from @assert () === 'UTF-8'.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultCharset
     */
    public function testSetDefaultCharset()
    {
        $this->assertSame(
                'UTF-8'
                , \InepZend\Util\PhpIni::setDefaultCharset()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultCharset
     */
    public function testSetDefaultCharset2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDefaultCharset(null)
        );
    }

    /**
     * Generated from @assert ('UTF-8') === 'UTF-8'.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultCharset
     */
    public function testSetDefaultCharset3()
    {
        $this->assertSame(
                'UTF-8'
                , \InepZend\Util\PhpIni::setDefaultCharset('UTF-8')
        );
    }

    /**
     * Generated from @assert ('') === false.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultCharset
     */
    public function testSetDefaultCharset4()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDefaultCharset('')
        );
    }

    /**
     * Generated from @assert () === 'UTF-8'.
     *
     * @covers \InepZend\Util\PhpIni::getDefaultCharset
     */
    public function testGetDefaultCharset()
    {
        $this->assertSame(
                'UTF-8'
                , \InepZend\Util\PhpIni::getDefaultCharset()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultMimetype
     */
    public function testSetDefaultMimetype()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDefaultMimetype()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultMimetype
     */
    public function testSetDefaultMimetype2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDefaultMimetype(null)
        );
    }

    /**
     * Generated from @assert ('text/html') === false.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultMimetype
     */
    public function testSetDefaultMimetype3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDefaultMimetype('text/html')
        );
    }

    /**
     * Generated from @assert ('text/plain') === 'text/plain'.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultMimetype
     */
    public function testSetDefaultMimetype4()
    {
        $this->assertSame(
                'text/plain'
                , \InepZend\Util\PhpIni::setDefaultMimetype('text/plain')
        );
    }

    /**
     * Generated from @assert () === 'text/plain'.
     *
     * @covers \InepZend\Util\PhpIni::getDefaultMimetype
     */
    public function testGetDefaultMimetype()
    {
        $this->assertSame(
                'text/plain'
                , \InepZend\Util\PhpIni::getDefaultMimetype()
        );
    }

    /**
     * Generated from @assert () === 60.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultSocketTimeout
     */
    public function testSetDefaultSocketTimeout()
    {
        $this->assertSame(
                60
                , \InepZend\Util\PhpIni::setDefaultSocketTimeout()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultSocketTimeout
     */
    public function testSetDefaultSocketTimeout2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDefaultSocketTimeout(null)
        );
    }

    /**
     * Generated from @assert (70) === 70.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultSocketTimeout
     */
    public function testSetDefaultSocketTimeout3()
    {
        $this->assertSame(
                70
                , \InepZend\Util\PhpIni::setDefaultSocketTimeout(70)
        );
    }

    /**
     * Generated from @assert (75, \InepZend\Util\PhpIni::OPERATION_EXACT) === 75.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultSocketTimeout
     */
    public function testSetDefaultSocketTimeout4()
    {
        $this->assertSame(
                75
                , \InepZend\Util\PhpIni::setDefaultSocketTimeout(75, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (1, \InepZend\Util\PhpIni::OPERATION_PLUS) === 76.
     *
     * @covers \InepZend\Util\PhpIni::setDefaultSocketTimeout
     */
    public function testSetDefaultSocketTimeout5()
    {
        $this->assertSame(
                76
                , \InepZend\Util\PhpIni::setDefaultSocketTimeout(1, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === 76.
     *
     * @covers \InepZend\Util\PhpIni::getDefaultSocketTimeout
     */
    public function testGetDefaultSocketTimeout()
    {
        $this->assertSame(
                76
                , \InepZend\Util\PhpIni::getDefaultSocketTimeout()
        );
    }

    /**
     * Generated from @assert () === '1'.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayErrors
     */
    public function testSetDisplayErrors()
    {
        $this->assertSame(
                '1'
                , \InepZend\Util\PhpIni::setDisplayErrors()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayErrors
     */
    public function testSetDisplayErrors2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDisplayErrors(null)
        );
    }

    /**
     * Generated from @assert (1) === '1'.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayErrors
     */
    public function testSetDisplayErrors3()
    {
        $this->assertSame(
                '1'
                , \InepZend\Util\PhpIni::setDisplayErrors(1)
        );
    }

    /**
     * Generated from @assert (true) === '1'.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayErrors
     */
    public function testSetDisplayErrors4()
    {
        $this->assertSame(
                '1'
                , \InepZend\Util\PhpIni::setDisplayErrors(true)
        );
    }

    /**
     * Generated from @assert (0) === '0'.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayErrors
     */
    public function testSetDisplayErrors5()
    {
        $this->assertSame(
                '0'
                , \InepZend\Util\PhpIni::setDisplayErrors(0)
        );
    }

    /**
     * Generated from @assert (false) === ''.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayErrors
     */
    public function testSetDisplayErrors6()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setDisplayErrors(false)
        );
    }

    /**
     * Generated from @assert ('stderr') === 'stderr'.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayErrors
     */
    public function testSetDisplayErrors7()
    {
        $this->assertSame(
                'stderr'
                , \InepZend\Util\PhpIni::setDisplayErrors('stderr')
        );
    }

    /**
     * Generated from @assert () === '0'.
     *
     * @covers \InepZend\Util\PhpIni::getDisplayErrors
     */
    public function testGetDisplayErrors()
    {
        $this->assertSame(
                '0'
                , \InepZend\Util\PhpIni::getDisplayErrors()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayStartupErrors
     */
    public function testSetDisplayStartupErrors()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDisplayStartupErrors()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayStartupErrors
     */
    public function testSetDisplayStartupErrors2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDisplayStartupErrors(null)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayStartupErrors
     */
    public function testSetDisplayStartupErrors3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setDisplayStartupErrors(false)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setDisplayStartupErrors
     */
    public function testSetDisplayStartupErrors4()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setDisplayStartupErrors(true)
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::getDisplayStartupErrors
     */
    public function testGetDisplayStartupErrors()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::getDisplayStartupErrors()
        );
    }

    /**
     * Generated from @assert () === ''.
     *
     * @covers \InepZend\Util\PhpIni::setErrorAppendString
     */
    public function testSetErrorAppendString()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setErrorAppendString()
        );
    }

    /**
     * Generated from @assert (null) === ''.
     *
     * @covers \InepZend\Util\PhpIni::setErrorAppendString
     */
    public function testSetErrorAppendString2()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setErrorAppendString(null)
        );
    }

    /**
     * Generated from @assert ('') === ''.
     *
     * @covers \InepZend\Util\PhpIni::setErrorAppendString
     */
    public function testSetErrorAppendString3()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setErrorAppendString('')
        );
    }

    /**
     * Generated from @assert ('End') === 'End'.
     *
     * @covers \InepZend\Util\PhpIni::setErrorAppendString
     */
    public function testSetErrorAppendString4()
    {
        $this->assertSame(
                'End'
                , \InepZend\Util\PhpIni::setErrorAppendString('End')
        );
    }

    /**
     * Generated from @assert () === 'End'.
     *
     * @covers \InepZend\Util\PhpIni::getErrorAppendString
     */
    public function testGetErrorAppendString()
    {
        $this->assertSame(
                'End'
                , \InepZend\Util\PhpIni::getErrorAppendString()
        );
    }

    /**
     * Generated from @assert ('error') === 'error'.
     *
     * @covers \InepZend\Util\PhpIni::setErrorLog
     */
    public function testSetErrorLog()
    {
        $this->assertSame(
                'error'
                , \InepZend\Util\PhpIni::setErrorLog('error')
        );
    }

    /**
     * Generated from @assert ('syslog') === 'syslog'.
     *
     * @covers \InepZend\Util\PhpIni::setErrorLog
     */
    public function testSetErrorLog2()
    {
        $this->assertSame(
                'syslog'
                , \InepZend\Util\PhpIni::setErrorLog('syslog')
        );
    }

    /**
     * Generated from @assert () === 'syslog'.
     *
     * @covers \InepZend\Util\PhpIni::getErrorLog
     */
    public function testGetErrorLog()
    {
        $this->assertSame(
                'syslog'
                , \InepZend\Util\PhpIni::getErrorLog()
        );
    }

    /**
     * Generated from @assert () === ''.
     *
     * @covers \InepZend\Util\PhpIni::setErrorPrependString
     */
    public function testSetErrorPrependString()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setErrorPrependString()
        );
    }

    /**
     * Generated from @assert (null) === ''.
     *
     * @covers \InepZend\Util\PhpIni::setErrorPrependString
     */
    public function testSetErrorPrependString2()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setErrorPrependString(null)
        );
    }

    /**
     * Generated from @assert ('') === ''.
     *
     * @covers \InepZend\Util\PhpIni::setErrorPrependString
     */
    public function testSetErrorPrependString3()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setErrorPrependString('')
        );
    }

    /**
     * Generated from @assert ('Error: ') === 'Error: '.
     *
     * @covers \InepZend\Util\PhpIni::setErrorPrependString
     */
    public function testSetErrorPrependString4()
    {
        $this->assertSame(
                'Error: '
                , \InepZend\Util\PhpIni::setErrorPrependString('Error: ')
        );
    }

    /**
     * Generated from @assert () === 'Error: '.
     *
     * @covers \InepZend\Util\PhpIni::getErrorPrependString
     */
    public function testGetErrorPrependString()
    {
        $this->assertSame(
                'Error: '
                , \InepZend\Util\PhpIni::getErrorPrependString()
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::setFileUploads
     */
    public function testSetFileUploads()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setFileUploads()
        );
    }

    /**
     * Generated from @assert (null) === true.
     *
     * @covers \InepZend\Util\PhpIni::setFileUploads
     */
    public function testSetFileUploads2()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setFileUploads(null)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setFileUploads
     */
    public function testSetFileUploads3()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setFileUploads(true)
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::getFileUploads
     */
    public function testGetFileUploads()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::getFileUploads()
        );
    }

    /**
     * Generated from @assert () === ''.
     *
     * @covers \InepZend\Util\PhpIni::setFrom
     */
    public function testSetFrom()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setFrom()
        );
    }

    /**
     * Generated from @assert ('') === ''.
     *
     * @covers \InepZend\Util\PhpIni::setFrom
     */
    public function testSetFrom2()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setFrom('')
        );
    }

    /**
     * Generated from @assert ('test') === 'test'.
     *
     * @covers \InepZend\Util\PhpIni::setFrom
     */
    public function testSetFrom3()
    {
        $this->assertSame(
                'test'
                , \InepZend\Util\PhpIni::setFrom('test')
        );
    }

    /**
     * Generated from @assert () === 'test'.
     *
     * @covers \InepZend\Util\PhpIni::getFrom
     */
    public function testGetFrom()
    {
        $this->assertSame(
                'test'
                , \InepZend\Util\PhpIni::getFrom()
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::setHtmlErrors
     */
    public function testSetHtmlErrors()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setHtmlErrors()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setHtmlErrors
     */
    public function testSetHtmlErrors2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setHtmlErrors(null)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setHtmlErrors
     */
    public function testSetHtmlErrors3()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setHtmlErrors(true)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setHtmlErrors
     */
    public function testSetHtmlErrors4()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setHtmlErrors(false)
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::getHtmlErrors
     */
    public function testGetHtmlErrors()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::getHtmlErrors()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreRepeatedErrors
     */
    public function testSetIgnoreRepeatedErrors()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setIgnoreRepeatedErrors()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreRepeatedErrors
     */
    public function testSetIgnoreRepeatedErrors2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setIgnoreRepeatedErrors(null)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreRepeatedErrors
     */
    public function testSetIgnoreRepeatedErrors3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setIgnoreRepeatedErrors(false)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreRepeatedErrors
     */
    public function testSetIgnoreRepeatedErrors4()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setIgnoreRepeatedErrors(true)
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::getIgnoreRepeatedErrors
     */
    public function testGetIgnoreRepeatedErrors()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::getIgnoreRepeatedErrors()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreRepeatedSource
     */
    public function testSetIgnoreRepeatedSource()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setIgnoreRepeatedSource()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreRepeatedSource
     */
    public function testSetIgnoreRepeatedSource2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setIgnoreRepeatedSource(null)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreRepeatedSource
     */
    public function testSetIgnoreRepeatedSource3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setIgnoreRepeatedSource(false)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreRepeatedSource
     */
    public function testSetIgnoreRepeatedSource4()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setIgnoreRepeatedSource(true)
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::getIgnoreRepeatedSource
     */
    public function testGetIgnoreRepeatedSource()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::getIgnoreRepeatedSource()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreUserAbort
     */
    public function testSetIgnoreUserAbort()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setIgnoreUserAbort()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreUserAbort
     */
    public function testSetIgnoreUserAbort2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setIgnoreUserAbort(null)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreUserAbort
     */
    public function testSetIgnoreUserAbort3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setIgnoreUserAbort(false)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setIgnoreUserAbort
     */
    public function testSetIgnoreUserAbort4()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setIgnoreUserAbort(true)
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::getIgnoreUserAbort
     */
    public function testGetIgnoreUserAbort()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::getIgnoreUserAbort()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setImplicitFlush
     */
    public function testSetImplicitFlush()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setImplicitFlush()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setImplicitFlush
     */
    public function testSetImplicitFlush2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setImplicitFlush(null)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setImplicitFlush
     */
    public function testSetImplicitFlush3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setImplicitFlush(false)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setImplicitFlush
     */
    public function testSetImplicitFlush4()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setImplicitFlush(true)
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::getImplicitFlush
     */
    public function testGetImplicitFlush()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::getImplicitFlush()
        );
    }

    /**
     * Generated from @assert () === '\\'.
     *
     * @covers \InepZend\Util\PhpIni::setIncludePath
     */
    public function testSetIncludePath()
    {
        $this->assertSame(
                '\\'
                , \InepZend\Util\PhpIni::setIncludePath()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setIncludePath
     */
    public function testSetIncludePath2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setIncludePath(null)
        );
    }

    /**
     * Generated from @assert ('\\') === '\\'.
     *
     * @covers \InepZend\Util\PhpIni::setIncludePath
     */
    public function testSetIncludePath3()
    {
        $this->assertSame(
                '\\'
                , \InepZend\Util\PhpIni::setIncludePath('\\')
        );
    }

    /**
     * Generated from @assert ('\\;c:\;') === '\\;c:\;'.
     *
     * @covers \InepZend\Util\PhpIni::setIncludePath
     */
    public function testSetIncludePath4()
    {
        $this->assertSame(
                '\\;c:\;'
                , \InepZend\Util\PhpIni::setIncludePath('\\;c:\;')
        );
    }

    /**
     * Generated from @assert () === '\\;c:\;'.
     *
     * @covers \InepZend\Util\PhpIni::getIncludePath
     */
    public function testGetIncludePath()
    {
        $this->assertSame(
                '\\;c:\;'
                , \InepZend\Util\PhpIni::getIncludePath()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setLogErrors
     */
    public function testSetLogErrors()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setLogErrors()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setLogErrors
     */
    public function testSetLogErrors2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setLogErrors(null)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setLogErrors
     */
    public function testSetLogErrors3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setLogErrors(false)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setLogErrors
     */
    public function testSetLogErrors4()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setLogErrors(true)
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::getLogErrors
     */
    public function testGetLogErrors()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::getLogErrors()
        );
    }

    /**
     * Generated from @assert () === 1024.
     *
     * @covers \InepZend\Util\PhpIni::setLogErrorsMaxLen
     */
    public function testSetLogErrorsMaxLen()
    {
        $this->assertSame(
                1024
                , \InepZend\Util\PhpIni::setLogErrorsMaxLen()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setLogErrorsMaxLen
     */
    public function testSetLogErrorsMaxLen2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setLogErrorsMaxLen(null)
        );
    }

    /**
     * Generated from @assert (1024) === 1024.
     *
     * @covers \InepZend\Util\PhpIni::setLogErrorsMaxLen
     */
    public function testSetLogErrorsMaxLen3()
    {
        $this->assertSame(
                1024
                , \InepZend\Util\PhpIni::setLogErrorsMaxLen(1024)
        );
    }

    /**
     * Generated from @assert (1024, \InepZend\Util\PhpIni::OPERATION_EXACT) === 1024.
     *
     * @covers \InepZend\Util\PhpIni::setLogErrorsMaxLen
     */
    public function testSetLogErrorsMaxLen4()
    {
        $this->assertSame(
                1024
                , \InepZend\Util\PhpIni::setLogErrorsMaxLen(1024, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (10, \InepZend\Util\PhpIni::OPERATION_PLUS) === 1034.
     *
     * @covers \InepZend\Util\PhpIni::setLogErrorsMaxLen
     */
    public function testSetLogErrorsMaxLen5()
    {
        $this->assertSame(
                1034
                , \InepZend\Util\PhpIni::setLogErrorsMaxLen(10, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert (0) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setLogErrorsMaxLen
     */
    public function testSetLogErrorsMaxLen6()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setLogErrorsMaxLen(0)
        );
    }

    /**
     * Generated from @assert () === 1034.
     *
     * @covers \InepZend\Util\PhpIni::getLogErrorsMaxLen
     */
    public function testGetLogErrorsMaxLen()
    {
        $this->assertSame(
                1034
                , \InepZend\Util\PhpIni::getLogErrorsMaxLen()
        );
    }

    /**
     * Generated from @assert () === 30.
     *
     * @covers \InepZend\Util\PhpIni::setMaxExecutionTime
     */
    public function testSetMaxExecutionTime()
    {
        $this->assertSame(
                30
                , \InepZend\Util\PhpIni::setMaxExecutionTime()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setMaxExecutionTime
     */
    public function testSetMaxExecutionTime2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setMaxExecutionTime(null)
        );
    }

    /**
     * Generated from @assert (60) === 60.
     *
     * @covers \InepZend\Util\PhpIni::setMaxExecutionTime
     */
    public function testSetMaxExecutionTime3()
    {
        $this->assertSame(
                60
                , \InepZend\Util\PhpIni::setMaxExecutionTime(60)
        );
    }

    /**
     * Generated from @assert (61, \InepZend\Util\PhpIni::OPERATION_EXACT) === 61.
     *
     * @covers \InepZend\Util\PhpIni::setMaxExecutionTime
     */
    public function testSetMaxExecutionTime4()
    {
        $this->assertSame(
                61
                , \InepZend\Util\PhpIni::setMaxExecutionTime(61, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (62, \InepZend\Util\PhpIni::OPERATION_PLUS) === 123.
     *
     * @covers \InepZend\Util\PhpIni::setMaxExecutionTime
     */
    public function testSetMaxExecutionTime5()
    {
        $this->assertSame(
                123
                , \InepZend\Util\PhpIni::setMaxExecutionTime(62, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert (0) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setMaxExecutionTime
     */
    public function testSetMaxExecutionTime6()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setMaxExecutionTime(0)
        );
    }

    /**
     * Generated from @assert (0, \InepZend\Util\PhpIni::OPERATION_EXACT) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setMaxExecutionTime
     */
    public function testSetMaxExecutionTime7()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setMaxExecutionTime(0, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (0, \InepZend\Util\PhpIni::OPERATION_PLUS) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setMaxExecutionTime
     */
    public function testSetMaxExecutionTime8()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setMaxExecutionTime(0, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === 0.
     *
     * @covers \InepZend\Util\PhpIni::getMaxExecutionTime
     */
    public function testGetMaxExecutionTime()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::getMaxExecutionTime()
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheAllowFailover
     */
    public function testSetMemcacheAllowFailover()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setMemcacheAllowFailover()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheAllowFailover
     */
    public function testSetMemcacheAllowFailover2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setMemcacheAllowFailover(null)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheAllowFailover
     */
    public function testSetMemcacheAllowFailover3()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setMemcacheAllowFailover(true)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheAllowFailover
     */
    public function testSetMemcacheAllowFailover4()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setMemcacheAllowFailover(false)
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::getMemcacheAllowFailover
     */
    public function testGetMemcacheAllowFailover()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::getMemcacheAllowFailover()
        );
    }

    /**
     * Generated from @assert () === 33000.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheChunkSize
     */
    public function testSetMemcacheChunkSize()
    {
        $this->assertSame(
                33000
                , \InepZend\Util\PhpIni::setMemcacheChunkSize()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheChunkSize
     */
    public function testSetMemcacheChunkSize2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setMemcacheChunkSize(null)
        );
    }

    /**
     * Generated from @assert (33500) === 33500.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheChunkSize
     */
    public function testSetMemcacheChunkSize3()
    {
        $this->assertSame(
                33500
                , \InepZend\Util\PhpIni::setMemcacheChunkSize(33500)
        );
    }

    /**
     * Generated from @assert (34000, \InepZend\Util\PhpIni::OPERATION_EXACT) === 34000.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheChunkSize
     */
    public function testSetMemcacheChunkSize4()
    {
        $this->assertSame(
                34000
                , \InepZend\Util\PhpIni::setMemcacheChunkSize(34000, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (24576, \InepZend\Util\PhpIni::OPERATION_PLUS) === 58576.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheChunkSize
     */
    public function testSetMemcacheChunkSize5()
    {
        $this->assertSame(
                58576
                , \InepZend\Util\PhpIni::setMemcacheChunkSize(24576, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === 58576.
     *
     * @covers \InepZend\Util\PhpIni::getMemcacheChunkSize
     */
    public function testGetMemcacheChunkSize()
    {
        $this->assertSame(
                58576
                , \InepZend\Util\PhpIni::getMemcacheChunkSize()
        );
    }

    /**
     * Generated from @assert () === 11211.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheDefaultPort
     */
    public function testSetMemcacheDefaultPort()
    {
        $this->assertSame(
                11211
                , \InepZend\Util\PhpIni::setMemcacheDefaultPort()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheDefaultPort
     */
    public function testSetMemcacheDefaultPort2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setMemcacheDefaultPort(null)
        );
    }

    /**
     * Generated from @assert (11211) === 11211.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheDefaultPort
     */
    public function testSetMemcacheDefaultPort3()
    {
        $this->assertSame(
                11211
                , \InepZend\Util\PhpIni::setMemcacheDefaultPort(11211)
        );
    }

    /**
     * Generated from @assert () === 11211.
     *
     * @covers \InepZend\Util\PhpIni::getMemcacheDefaultPort
     */
    public function testGetMemcacheDefaultPort()
    {
        $this->assertSame(
                11211
                , \InepZend\Util\PhpIni::getMemcacheDefaultPort()
        );
    }

    /**
     * Generated from @assert () === 'crc32'.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheHashFunction
     */
    public function testSetMemcacheHashFunction()
    {
        $this->assertSame(
                'crc32'
                , \InepZend\Util\PhpIni::setMemcacheHashFunction()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheHashFunction
     */
    public function testSetMemcacheHashFunction2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setMemcacheHashFunction(null)
        );
    }

    /**
     * Generated from @assert ('crc32') === 'crc32'.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheHashFunction
     */
    public function testSetMemcacheHashFunction3()
    {
        $this->assertSame(
                'crc32'
                , \InepZend\Util\PhpIni::setMemcacheHashFunction('crc32')
        );
    }

    /**
     * Generated from @assert () === 'crc32'.
     *
     * @covers \InepZend\Util\PhpIni::getMemcacheHashFunction
     */
    public function testGetMemcacheHashFunction()
    {
        $this->assertSame(
                'crc32'
                , \InepZend\Util\PhpIni::getMemcacheHashFunction()
        );
    }

    /**
     * Generated from @assert () === 'standard'.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheHashStrategy
     */
    public function testSetMemcacheHashStrategy()
    {
        $this->assertSame(
                'standard'
                , \InepZend\Util\PhpIni::setMemcacheHashStrategy()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheHashStrategy
     */
    public function testSetMemcacheHashStrategy2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setMemcacheHashStrategy(null)
        );
    }

    /**
     * Generated from @assert ('standard') === 'standard'.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheHashStrategy
     */
    public function testSetMemcacheHashStrategy3()
    {
        $this->assertSame(
                'standard'
                , \InepZend\Util\PhpIni::setMemcacheHashStrategy('standard')
        );
    }

    /**
     * Generated from @assert () === 'standard'.
     *
     * @covers \InepZend\Util\PhpIni::getMemcacheHashStrategy
     */
    public function testGetMemcacheHashStrategy()
    {
        $this->assertSame(
                'standard'
                , \InepZend\Util\PhpIni::getMemcacheHashStrategy()
        );
    }

    /**
     * Generated from @assert () === 20.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheMaxFailoverAttempts
     */
    public function testSetMemcacheMaxFailoverAttempts()
    {
        $this->assertSame(
                20
                , \InepZend\Util\PhpIni::setMemcacheMaxFailoverAttempts()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheMaxFailoverAttempts
     */
    public function testSetMemcacheMaxFailoverAttempts2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setMemcacheMaxFailoverAttempts(null)
        );
    }

    /**
     * Generated from @assert (20) === 20.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheMaxFailoverAttempts
     */
    public function testSetMemcacheMaxFailoverAttempts3()
    {
        $this->assertSame(
                20
                , \InepZend\Util\PhpIni::setMemcacheMaxFailoverAttempts(20)
        );
    }

    /**
     * Generated from @assert (20, \InepZend\Util\PhpIni::OPERATION_EXACT) === 20.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheMaxFailoverAttempts
     */
    public function testSetMemcacheMaxFailoverAttempts4()
    {
        $this->assertSame(
                20
                , \InepZend\Util\PhpIni::setMemcacheMaxFailoverAttempts(20, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (5, \InepZend\Util\PhpIni::OPERATION_PLUS) === 25.
     *
     * @covers \InepZend\Util\PhpIni::setMemcacheMaxFailoverAttempts
     */
    public function testSetMemcacheMaxFailoverAttempts5()
    {
        $this->assertSame(
                25
                , \InepZend\Util\PhpIni::setMemcacheMaxFailoverAttempts(5, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === 25.
     *
     * @covers \InepZend\Util\PhpIni::getMemcacheMaxFailoverAttempts
     */
    public function testGetMemcacheMaxFailoverAttempts()
    {
        $this->assertSame(
                25
                , \InepZend\Util\PhpIni::getMemcacheMaxFailoverAttempts()
        );
    }

    /**
     * Generated from @assert () === 128.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit()
    {
        $this->assertSame(
                128
                , \InepZend\Util\PhpIni::setMemoryLimit()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setMemoryLimit(null)
        );
    }

    /**
     * Generated from @assert (1024) === 1024.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit3()
    {
        $this->assertSame(
                1024
                , \InepZend\Util\PhpIni::setMemoryLimit(1024)
        );
    }

    /**
     * Generated from @assert ('1025M') === 1025.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit4()
    {
        $this->assertSame(
                1025
                , \InepZend\Util\PhpIni::setMemoryLimit('1025M')
        );
    }

    /**
     * Generated from @assert ('1026Mb') === 1026.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit5()
    {
        $this->assertSame(
                1026
                , \InepZend\Util\PhpIni::setMemoryLimit('1026Mb')
        );
    }

    /**
     * Generated from @assert (1027, \InepZend\Util\PhpIni::OPERATION_EXACT) === 1027.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit6()
    {
        $this->assertSame(
                1027
                , \InepZend\Util\PhpIni::setMemoryLimit(1027, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert ('1028M', \InepZend\Util\PhpIni::OPERATION_EXACT) === 1028.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit7()
    {
        $this->assertSame(
                1028
                , \InepZend\Util\PhpIni::setMemoryLimit('1028M', \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert ('1029Mb', \InepZend\Util\PhpIni::OPERATION_EXACT) === 1029.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit8()
    {
        $this->assertSame(
                1029
                , \InepZend\Util\PhpIni::setMemoryLimit('1029Mb', \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert ('1030DefaultUnit', \InepZend\Util\PhpIni::OPERATION_EXACT) === 1030.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit9()
    {
        $this->assertSame(
                1030
                , \InepZend\Util\PhpIni::setMemoryLimit('1030DefaultUnit', \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (1031, \InepZend\Util\PhpIni::OPERATION_PLUS) === 2061.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit10()
    {
        $this->assertSame(
                2061
                , \InepZend\Util\PhpIni::setMemoryLimit(1031, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert ('1032M', \InepZend\Util\PhpIni::OPERATION_PLUS) === 3093.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit11()
    {
        $this->assertSame(
                3093
                , \InepZend\Util\PhpIni::setMemoryLimit('1032M', \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert ('1033Mb', \InepZend\Util\PhpIni::OPERATION_PLUS) === 4126.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit12()
    {
        $this->assertSame(
                4126
                , \InepZend\Util\PhpIni::setMemoryLimit('1033Mb', \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert ('1034DefaultUnit', \InepZend\Util\PhpIni::OPERATION_PLUS) === 5160.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit13()
    {
        $this->assertSame(
                5160
                , \InepZend\Util\PhpIni::setMemoryLimit('1034DefaultUnit', \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert (-1) === -1.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit14()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::setMemoryLimit(-1)
        );
    }

    /**
     * Generated from @assert ('-1') === -1.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit15()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::setMemoryLimit('-1')
        );
    }

    /**
     * Generated from @assert ('-1', \InepZend\Util\PhpIni::OPERATION_EXACT) === -1.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit16()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::setMemoryLimit('-1', \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert ('-1', \InepZend\Util\PhpIni::OPERATION_PLUS) === -1.
     *
     * @covers \InepZend\Util\PhpIni::setMemoryLimit
     */
    public function testSetMemoryLimit17()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::setMemoryLimit('-1', \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === -1.
     *
     * @covers \InepZend\Util\PhpIni::getMemoryLimit
     */
    public function testGetMemoryLimit()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::getMemoryLimit()
        );
    }

    /**
     * Generated from @assert () === ''.
     *
     * @covers \InepZend\Util\PhpIni::setOpenBasedir
     */
    public function testSetOpenBasedir()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setOpenBasedir()
        );
    }

    /**
     * Generated from @assert (null) === ''.
     *
     * @covers \InepZend\Util\PhpIni::setOpenBasedir
     */
    public function testSetOpenBasedir2()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setOpenBasedir(null)
        );
    }

    /**
     * Generated from @assert () === ''.
     *
     * @covers \InepZend\Util\PhpIni::getOpenBasedir
     */
    public function testGetOpenBasedir()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::getOpenBasedir()
        );
    }

    /**
     * Generated from @assert () === ''.
     *
     * @covers \InepZend\Util\PhpIni::setPharExtractList
     */
    public function testSetPharExtractList()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setPharExtractList()
        );
    }

    /**
     * Generated from @assert (null) === ''.
     *
     * @covers \InepZend\Util\PhpIni::setPharExtractList
     */
    public function testSetPharExtractList2()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setPharExtractList(null)
        );
    }

    /**
     * Generated from @assert ('') === ''.
     *
     * @covers \InepZend\Util\PhpIni::setPharExtractList
     */
    public function testSetPharExtractList3()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setPharExtractList('')
        );
    }

    /**
     * Generated from @assert () === ''.
     *
     * @covers \InepZend\Util\PhpIni::getPharExtractList
     */
    public function testGetPharExtractList()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::getPharExtractList()
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::setPharReadOnly
     */
    public function testSetPharReadOnly()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setPharReadOnly()
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setPharReadOnly
     */
    public function testSetPharReadOnly2()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setPharReadOnly(true)
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::getPharReadOnly
     */
    public function testGetPharReadOnly()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::getPharReadOnly()
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::setPharRequireHash
     */
    public function testSetPharRequireHash()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setPharRequireHash()
        );
    }

    /**
     * Generated from @assert (null) === true.
     *
     * @covers \InepZend\Util\PhpIni::setPharRequireHash
     */
    public function testSetPharRequireHash2()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setPharRequireHash(null)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setPharRequireHash
     */
    public function testSetPharRequireHash3()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setPharRequireHash(true)
        );
    }

    /**
     * Generated from @assert (false) === true.
     *
     * @covers \InepZend\Util\PhpIni::setPharRequireHash
     */
    public function testSetPharRequireHash4()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setPharRequireHash(false)
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::getPharRequireHash
     */
    public function testGetPharRequireHash()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::getPharRequireHash()
        );
    }

    /**
     * Generated from @assert () === ''.
     *
     * @covers \InepZend\Util\PhpIni::setSendmailFrom
     */
    public function testSetSendmailFrom()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setSendmailFrom()
        );
    }

    /**
     * Generated from @assert ('') === ''.
     *
     * @covers \InepZend\Util\PhpIni::setSendmailFrom
     */
    public function testSetSendmailFrom2()
    {
        $this->assertSame(
                ''
                , \InepZend\Util\PhpIni::setSendmailFrom('')
        );
    }

    /**
     * Generated from @assert ('test') === 'test'.
     *
     * @covers \InepZend\Util\PhpIni::setSendmailFrom
     */
    public function testSetSendmailFrom3()
    {
        $this->assertSame(
                'test'
                , \InepZend\Util\PhpIni::setSendmailFrom('test')
        );
    }

    /**
     * Generated from @assert () === 'test'.
     *
     * @covers \InepZend\Util\PhpIni::getSendmailFrom
     */
    public function testGetSendmailFrom()
    {
        $this->assertSame(
                'test'
                , \InepZend\Util\PhpIni::getSendmailFrom()
        );
    }

    /**
     * Generated from @assert () === 180.
     *
     * @covers \InepZend\Util\PhpIni::setSessionCacheExpire
     */
    public function testSetSessionCacheExpire()
    {
        $this->assertSame(
                180
                , \InepZend\Util\PhpIni::setSessionCacheExpire()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionCacheExpire
     */
    public function testSetSessionCacheExpire2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionCacheExpire(null)
        );
    }

    /**
     * Generated from @assert (0) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setSessionCacheExpire
     */
    public function testSetSessionCacheExpire3()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setSessionCacheExpire(0)
        );
    }

    /**
     * Generated from @assert (180) === 180.
     *
     * @covers \InepZend\Util\PhpIni::setSessionCacheExpire
     */
    public function testSetSessionCacheExpire4()
    {
        $this->assertSame(
                180
                , \InepZend\Util\PhpIni::setSessionCacheExpire(180)
        );
    }

    /**
     * Generated from @assert (180, \InepZend\Util\PhpIni::OPERATION_EXACT) === 180.
     *
     * @covers \InepZend\Util\PhpIni::setSessionCacheExpire
     */
    public function testSetSessionCacheExpire5()
    {
        $this->assertSame(
                180
                , \InepZend\Util\PhpIni::setSessionCacheExpire(180, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (20, \InepZend\Util\PhpIni::OPERATION_PLUS) === 200.
     *
     * @covers \InepZend\Util\PhpIni::setSessionCacheExpire
     */
    public function testSetSessionCacheExpire6()
    {
        $this->assertSame(
                200
                , \InepZend\Util\PhpIni::setSessionCacheExpire(20, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === 200.
     *
     * @covers \InepZend\Util\PhpIni::getSessionCacheExpire
     */
    public function testGetSessionCacheExpire()
    {
        $this->assertSame(
                200
                , \InepZend\Util\PhpIni::getSessionCacheExpire()
        );
    }

    /**
     * Generated from @assert () === 'nocache'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionCacheLimiter
     */
    public function testSetSessionCacheLimiter()
    {
        $this->assertSame(
                'nocache'
                , \InepZend\Util\PhpIni::setSessionCacheLimiter()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionCacheLimiter
     */
    public function testSetSessionCacheLimiter2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionCacheLimiter(null)
        );
    }

    /**
     * Generated from @assert ('nocache') === 'nocache'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionCacheLimiter
     */
    public function testSetSessionCacheLimiter3()
    {
        $this->assertSame(
                'nocache'
                , \InepZend\Util\PhpIni::setSessionCacheLimiter('nocache')
        );
    }

    /**
     * Generated from @assert ('private') === 'private'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionCacheLimiter
     */
    public function testSetSessionCacheLimiter4()
    {
        $this->assertSame(
                'private'
                , \InepZend\Util\PhpIni::setSessionCacheLimiter('private')
        );
    }

    /**
     * Generated from @assert () === 'private'.
     *
     * @covers \InepZend\Util\PhpIni::getSessionCacheLimiter
     */
    public function testGetSessionCacheLimiter()
    {
        $this->assertSame(
                'private'
                , \InepZend\Util\PhpIni::getSessionCacheLimiter()
        );
    }

    /**
     * Generated from @assert () === 0.
     *
     * @covers \InepZend\Util\PhpIni::setSessionHashFunction
     */
    public function testSetSessionHashFunction()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setSessionHashFunction()
        );
    }

    /**
     * Generated from @assert (null) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setSessionHashFunction
     */
    public function testSetSessionHashFunction2()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setSessionHashFunction(null)
        );
    }

    /**
     * Generated from @assert (0) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setSessionHashFunction
     */
    public function testSetSessionHashFunction3()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setSessionHashFunction(0)
        );
    }

    /**
     * Generated from @assert (1) === 1.
     *
     * @covers \InepZend\Util\PhpIni::setSessionHashFunction
     */
    public function testSetSessionHashFunction4()
    {
        $this->assertSame(
                1
                , \InepZend\Util\PhpIni::setSessionHashFunction(1)
        );
    }

    /**
     * Generated from @assert () === 0.
     *
     * @covers \InepZend\Util\PhpIni::getSessionHashFunction
     */
    public function testGetSessionHashFunction()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::getSessionHashFunction()
        );
    }

    /**
     * Generated from @assert () === 'PHPSESSID'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionName
     */
    public function testSetSessionName()
    {
        $this->assertSame(
                'PHPSESSID'
                , \InepZend\Util\PhpIni::setSessionName()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionName
     */
    public function testSetSessionName2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionName(null)
        );
    }

    /**
     * Generated from @assert ('PHPSESSID') === 'PHPSESSID'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionName
     */
    public function testSetSessionName3()
    {
        $this->assertSame(
                'PHPSESSID'
                , \InepZend\Util\PhpIni::setSessionName('PHPSESSID')
        );
    }

    /**
     * Generated from @assert ('PHPSESSIONID') === 'PHPSESSIONID'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionName
     */
    public function testSetSessionName4()
    {
        $this->assertSame(
                'PHPSESSIONID'
                , \InepZend\Util\PhpIni::setSessionName('PHPSESSIONID')
        );
    }

    /**
     * Generated from @assert () === 'PHPSESSIONID'.
     *
     * @covers \InepZend\Util\PhpIni::getSessionName
     */
    public function testGetSessionName()
    {
        $this->assertSame(
                'PHPSESSIONID'
                , \InepZend\Util\PhpIni::getSessionName()
        );
    }

    /**
     * Generated from @assert () === 'files'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionSaveHandler
     */
//    public function testSetSessionSaveHandler()
//    {
//        $this->assertSame(
//                'files'
//                , \InepZend\Util\PhpIni::setSessionSaveHandler()
//        );
//    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionSaveHandler
     */
    public function testSetSessionSaveHandler2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionSaveHandler(null)
        );
    }

    /**
     * Generated from @assert ('files') === 'files'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionSaveHandler
     */
//    public function testSetSessionSaveHandler3()
//    {
//        $this->assertSame(
//                'files'
//                , \InepZend\Util\PhpIni::setSessionSaveHandler('files')
//        );
//    }

    /**
     * Generated from @assert () === 'files'.
     *
     * @covers \InepZend\Util\PhpIni::getSessionSaveHandler
     */
    public function testGetSessionSaveHandler()
    {
        $this->assertSame(
                'files'
                , \InepZend\Util\PhpIni::getSessionSaveHandler()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionSavePath
     */
//     public function testSetSessionSavePath()
//     {
//         $this->assertSame(
//                 false
//                 , \InepZend\Util\PhpIni::setSessionSavePath()
//         );
//     }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionSavePath
     */
//     public function testSetSessionSavePath2()
//     {
//         $this->assertSame(
//                 false
//                 , \InepZend\Util\PhpIni::setSessionSavePath(null)
//         );
//     }

    /**
     * Generated from @assert ('\\') === '\\'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionSavePath
     */
    public function testSetSessionSavePath3()
    {
        $this->assertSame(
                '\\'
                , \InepZend\Util\PhpIni::setSessionSavePath('\\')
        );
    }

    /**
     * Generated from @assert () === '\\'.
     *
     * @covers \InepZend\Util\PhpIni::getSessionSavePath
     */
    public function testGetSessionSavePath()
    {
        $this->assertSame(
                '\\'
                , \InepZend\Util\PhpIni::getSessionSavePath()
        );
    }

    /**
     * Generated from @assert () === 'php'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionSerializeHandler
     */
//    public function testSetSessionSerializeHandler()
//    {
//        $this->assertSame(
//                'php'
//                , \InepZend\Util\PhpIni::setSessionSerializeHandler()
//        );
//    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionSerializeHandler
     */
    public function testSetSessionSerializeHandler2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionSerializeHandler(null)
        );
    }

    /**
     * Generated from @assert ('php') === 'php'.
     *
     * @covers \InepZend\Util\PhpIni::setSessionSerializeHandler
     */
//    public function testSetSessionSerializeHandler3()
//    {
//        $this->assertSame(
//                'php'
//                , \InepZend\Util\PhpIni::setSessionSerializeHandler('php')
//        );
//    }

    /**
     * Generated from @assert () === 'php'.
     *
     * @covers \InepZend\Util\PhpIni::getSessionSerializeHandler
     */
    public function testGetSessionSerializeHandler()
    {
        $this->assertSame(
                'php'
                , \InepZend\Util\PhpIni::getSessionSerializeHandler()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseStrictMode
     */
    public function testSetSessionUseStrictMode()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionUseStrictMode()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseStrictMode
     */
    public function testSetSessionUseStrictMode2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionUseStrictMode(null)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseStrictMode
     */
    public function testSetSessionUseStrictMode3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionUseStrictMode(false)
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::getSessionUseStrictMode
     */
    public function testGetSessionUseStrictMode()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::getSessionUseStrictMode()
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseCookies
     */
    public function testSetSessionUseCookies()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setSessionUseCookies()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseCookies
     */
    public function testSetSessionUseCookies2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionUseCookies(null)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseCookies
     */
    public function testSetSessionUseCookies3()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setSessionUseCookies(true)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseCookies
     */
    public function testSetSessionUseCookies4()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionUseCookies(false)
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::getSessionUseCookies
     */
    public function testGetSessionUseCookies()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::getSessionUseCookies()
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseOnlyCookies
     */
    public function testSetSessionUseOnlyCookies()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setSessionUseOnlyCookies()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseOnlyCookies
     */
    public function testSetSessionUseOnlyCookies2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionUseOnlyCookies(null)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseOnlyCookies
     */
    public function testSetSessionUseOnlyCookies3()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setSessionUseOnlyCookies(true)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseOnlyCookies
     */
    public function testSetSessionUseOnlyCookies4()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSessionUseOnlyCookies(false)
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::getSessionUseOnlyCookies
     */
    public function testGetSessionUseOnlyCookies()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::getSessionUseOnlyCookies()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseTransSid
     */
//    public function testSetSessionUseTransSid()
//    {
//        $this->assertSame(
//                false
//                , \InepZend\Util\PhpIni::setSessionUseTransSid()
//        );
//    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseTransSid
     */
//    public function testSetSessionUseTransSid2()
//    {
//        $this->assertSame(
//                false
//                , \InepZend\Util\PhpIni::setSessionUseTransSid(null)
//        );
//    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseTransSid
     */
//    public function testSetSessionUseTransSid3()
//    {
//        $this->assertSame(
//                false
//                , \InepZend\Util\PhpIni::setSessionUseTransSid(false)
//        );
//    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setSessionUseTransSid
     */
//    public function testSetSessionUseTransSid4()
//    {
//        $this->assertSame(
//                true
//                , \InepZend\Util\PhpIni::setSessionUseTransSid(true)
//        );
//    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::getSessionUseTransSid
     */
    public function testGetSessionUseTransSid()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::getSessionUseTransSid()
        );
    }

    /**
     * Generated from @assert () === 'localhost'.
     *
     * @covers \InepZend\Util\PhpIni::setSmtp
     */
    public function testSetSmtp()
    {
        $this->assertSame(
                'localhost'
                , \InepZend\Util\PhpIni::setSmtp()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSmtp
     */
    public function testSetSmtp2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSmtp(null)
        );
    }

    /**
     * Generated from @assert ('localhost') === 'localhost'.
     *
     * @covers \InepZend\Util\PhpIni::setSmtp
     */
    public function testSetSmtp3()
    {
        $this->assertSame(
                'localhost'
                , \InepZend\Util\PhpIni::setSmtp('localhost')
        );
    }

    /**
     * Generated from @assert () === 'localhost'.
     *
     * @covers \InepZend\Util\PhpIni::getSmtp
     */
    public function testGetSmtp()
    {
        $this->assertSame(
                'localhost'
                , \InepZend\Util\PhpIni::getSmtp()
        );
    }

    /**
     * Generated from @assert () === 25.
     *
     * @covers \InepZend\Util\PhpIni::setSmtpPort
     */
    public function testSetSmtpPort()
    {
        $this->assertSame(
                25
                , \InepZend\Util\PhpIni::setSmtpPort()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSmtpPort
     */
    public function testSetSmtpPort2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSmtpPort(null)
        );
    }

    /**
     * Generated from @assert (25) === 25.
     *
     * @covers \InepZend\Util\PhpIni::setSmtpPort
     */
    public function testSetSmtpPort3()
    {
        $this->assertSame(
                25
                , \InepZend\Util\PhpIni::setSmtpPort(25)
        );
    }

    /**
     * Generated from @assert () === 25.
     *
     * @covers \InepZend\Util\PhpIni::getSmtpPort
     */
    public function testGetSmtpPort()
    {
        $this->assertSame(
                25
                , \InepZend\Util\PhpIni::getSmtpPort()
        );
    }

    /**
     * Generated from @assert () === 1.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCache
     */
    public function testSetSoapWsdlCache()
    {
        $this->assertSame(
                1
                , \InepZend\Util\PhpIni::setSoapWsdlCache()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCache
     */
    public function testSetSoapWsdlCache2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSoapWsdlCache(null)
        );
    }

    /**
     * Generated from @assert (0) === 0.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCache
     */
    public function testSetSoapWsdlCache3()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::setSoapWsdlCache(0)
        );
    }

    /**
     * Generated from @assert (1) === 1.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCache
     */
    public function testSetSoapWsdlCache4()
    {
        $this->assertSame(
                1
                , \InepZend\Util\PhpIni::setSoapWsdlCache(1)
        );
    }

    /**
     * Generated from @assert (2) === 2.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCache
     */
    public function testSetSoapWsdlCache5()
    {
        $this->assertSame(
                2
                , \InepZend\Util\PhpIni::setSoapWsdlCache(2)
        );
    }

    /**
     * Generated from @assert (3) === 3.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCache
     */
    public function testSetSoapWsdlCache6()
    {
        $this->assertSame(
                3
                , \InepZend\Util\PhpIni::setSoapWsdlCache(3)
        );
    }

    /**
     * Generated from @assert () === 3.
     *
     * @covers \InepZend\Util\PhpIni::getSoapWsdlCache
     */
    public function testGetSoapWsdlCache()
    {
        $this->assertSame(
                3
                , \InepZend\Util\PhpIni::getSoapWsdlCache()
        );
    }

    /**
     * Generated from @assert () === '\\'.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheDir
     */
    public function testSetSoapWsdlCacheDir()
    {
        $this->assertSame(
                '\\'
                , \InepZend\Util\PhpIni::setSoapWsdlCacheDir()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheDir
     */
    public function testSetSoapWsdlCacheDir2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSoapWsdlCacheDir(null)
        );
    }

    /**
     * Generated from @assert ('\\') === '\\'.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheDir
     */
    public function testSetSoapWsdlCacheDir3()
    {
        $this->assertSame(
                '\\'
                , \InepZend\Util\PhpIni::setSoapWsdlCacheDir('\\')
        );
    }

    /**
     * Generated from @assert () === '\\'.
     *
     * @covers \InepZend\Util\PhpIni::getSoapWsdlCacheDir
     */
    public function testGetSoapWsdlCacheDir()
    {
        $this->assertSame(
                '\\'
                , \InepZend\Util\PhpIni::getSoapWsdlCacheDir()
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheEnabled
     */
    public function testSetSoapWsdlCacheEnabled()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setSoapWsdlCacheEnabled()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheEnabled
     */
    public function testSetSoapWsdlCacheEnabled2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSoapWsdlCacheEnabled(null)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheEnabled
     */
    public function testSetSoapWsdlCacheEnabled3()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setSoapWsdlCacheEnabled(true)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheEnabled
     */
    public function testSetSoapWsdlCacheEnabled4()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSoapWsdlCacheEnabled(false)
        );
    }

    /**
     * Generated from @assert () === true.
     *
     * @covers \InepZend\Util\PhpIni::getSoapWsdlCacheEnabled
     */
    public function testGetSoapWsdlCacheEnabled()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::getSoapWsdlCacheEnabled()
        );
    }

    /**
     * Generated from @assert () === 5.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheLimit
     */
    public function testSetSoapWsdlCacheLimit()
    {
        $this->assertSame(
                5
                , \InepZend\Util\PhpIni::setSoapWsdlCacheLimit()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheLimit
     */
    public function testSetSoapWsdlCacheLimit2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSoapWsdlCacheLimit(null)
        );
    }

    /**
     * Generated from @assert (5) === 5.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheLimit
     */
    public function testSetSoapWsdlCacheLimit3()
    {
        $this->assertSame(
                5
                , \InepZend\Util\PhpIni::setSoapWsdlCacheLimit(5)
        );
    }

    /**
     * Generated from @assert (5, \InepZend\Util\PhpIni::OPERATION_EXACT) === 5.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheLimit
     */
    public function testSetSoapWsdlCacheLimit4()
    {
        $this->assertSame(
                5
                , \InepZend\Util\PhpIni::setSoapWsdlCacheLimit(5, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (1, \InepZend\Util\PhpIni::OPERATION_PLUS) === 6.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheLimit
     */
    public function testSetSoapWsdlCacheLimit5()
    {
        $this->assertSame(
                6
                , \InepZend\Util\PhpIni::setSoapWsdlCacheLimit(1, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === 6.
     *
     * @covers \InepZend\Util\PhpIni::getSoapWsdlCacheLimit
     */
    public function testGetSoapWsdlCacheLimit()
    {
        $this->assertSame(
                6
                , \InepZend\Util\PhpIni::getSoapWsdlCacheLimit()
        );
    }

    /**
     * Generated from @assert () === 86400.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheTtl
     */
    public function testSetSoapWsdlCacheTtl()
    {
        $this->assertSame(
                86400
                , \InepZend\Util\PhpIni::setSoapWsdlCacheTtl()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheTtl
     */
    public function testSetSoapWsdlCacheTtl2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setSoapWsdlCacheTtl(null)
        );
    }

    /**
     * Generated from @assert (86400) === 86400.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheTtl
     */
    public function testSetSoapWsdlCacheTtl3()
    {
        $this->assertSame(
                86400
                , \InepZend\Util\PhpIni::setSoapWsdlCacheTtl(86400)
        );
    }

    /**
     * Generated from @assert (86400, \InepZend\Util\PhpIni::OPERATION_EXACT) === 86400.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheTtl
     */
    public function testSetSoapWsdlCacheTtl4()
    {
        $this->assertSame(
                86400
                , \InepZend\Util\PhpIni::setSoapWsdlCacheTtl(86400, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert (600, \InepZend\Util\PhpIni::OPERATION_PLUS) === 87000.
     *
     * @covers \InepZend\Util\PhpIni::setSoapWsdlCacheTtl
     */
    public function testSetSoapWsdlCacheTtl5()
    {
        $this->assertSame(
                87000
                , \InepZend\Util\PhpIni::setSoapWsdlCacheTtl(600, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert () === 87000.
     *
     * @covers \InepZend\Util\PhpIni::getSoapWsdlCacheTtl
     */
    public function testGetSoapWsdlCacheTtl()
    {
        $this->assertSame(
                87000
                , \InepZend\Util\PhpIni::getSoapWsdlCacheTtl()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setTrackErrors
     */
    public function testSetTrackErrors()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setTrackErrors()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setTrackErrors
     */
    public function testSetTrackErrors2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setTrackErrors(null)
        );
    }

    /**
     * Generated from @assert (false) === false.
     *
     * @covers \InepZend\Util\PhpIni::setTrackErrors
     */
    public function testSetTrackErrors3()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setTrackErrors(false)
        );
    }

    /**
     * Generated from @assert (true) === true.
     *
     * @covers \InepZend\Util\PhpIni::setTrackErrors
     */
    public function testSetTrackErrors4()
    {
        $this->assertSame(
                true
                , \InepZend\Util\PhpIni::setTrackErrors(true)
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::getTrackErrors
     */
    public function testGetTrackErrors()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::getTrackErrors()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::setUserAgent
     */
    public function testSetUserAgent()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setUserAgent()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setUserAgent
     */
    public function testSetUserAgent2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setUserAgent(null)
        );
    }

    /**
     * Generated from @assert ('test') === 'test'.
     *
     * @covers \InepZend\Util\PhpIni::setUserAgent
     */
    public function testSetUserAgent3()
    {
        $this->assertSame(
                'test'
                , \InepZend\Util\PhpIni::setUserAgent('test')
        );
    }

    /**
     * Generated from @assert () === 'test'.
     *
     * @covers \InepZend\Util\PhpIni::getUserAgent
     */
    public function testGetUserAgent()
    {
        $this->assertSame(
                'test'
                , \InepZend\Util\PhpIni::getUserAgent()
        );
    }

//     /**
//      * Generated from @assert () === 100.
//      *
//      * @covers \InepZend\Util\PhpIni::setXdebugMaxNestingLevel
//      */
//     public function testSetXdebugMaxNestingLevel()
//     {
//         $this->assertSame(
//                 100
//                 , \InepZend\Util\PhpIni::setXdebugMaxNestingLevel()
//         );
//     }

//     /**
//      * Generated from @assert (null) === false.
//      *
//      * @covers \InepZend\Util\PhpIni::setXdebugMaxNestingLevel
//      */
//     public function testSetXdebugMaxNestingLevel2()
//     {
//         $this->assertSame(
//                 false
//                 , \InepZend\Util\PhpIni::setXdebugMaxNestingLevel(null)
//         );
//     }

//     /**
//      * Generated from @assert (100) === 100.
//      *
//      * @covers \InepZend\Util\PhpIni::setXdebugMaxNestingLevel
//      */
//     public function testSetXdebugMaxNestingLevel3()
//     {
//         $this->assertSame(
//                 100
//                 , \InepZend\Util\PhpIni::setXdebugMaxNestingLevel(100)
//         );
//     }

//     /**
//      * Generated from @assert (100, \InepZend\Util\PhpIni::OPERATION_EXACT) === 100.
//      *
//      * @covers \InepZend\Util\PhpIni::setXdebugMaxNestingLevel
//      */
//     public function testSetXdebugMaxNestingLevel4()
//     {
//         $this->assertSame(
//                 100
//                 , \InepZend\Util\PhpIni::setXdebugMaxNestingLevel(100, \InepZend\Util\PhpIni::OPERATION_EXACT)
//         );
//     }

//     /**
//      * Generated from @assert (50, \InepZend\Util\PhpIni::OPERATION_PLUS) === 150.
//      *
//      * @covers \InepZend\Util\PhpIni::setXdebugMaxNestingLevel
//      */
//     public function testSetXdebugMaxNestingLevel5()
//     {
//         $this->assertSame(
//                 150
//                 , \InepZend\Util\PhpIni::setXdebugMaxNestingLevel(50, \InepZend\Util\PhpIni::OPERATION_PLUS)
//         );
//     }

//     /**
//      * Generated from @assert () === 150.
//      *
//      * @covers \InepZend\Util\PhpIni::getXdebugMaxNestingLevel
//      */
//     public function testGetXdebugMaxNestingLevel()
//     {
//         $this->assertSame(
//                 150
//                 , \InepZend\Util\PhpIni::getXdebugMaxNestingLevel()
//         );
//     }

    /**
     * Generated from @assert () === 'dbgp'.
     *
     * @covers \InepZend\Util\PhpIni::setXdebugRemoteHandler
     */
    public function testSetXdebugRemoteHandler()
    {
        $this->assertSame(
                'dbgp'
                , \InepZend\Util\PhpIni::setXdebugRemoteHandler()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setXdebugRemoteHandler
     */
    public function testSetXdebugRemoteHandler2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setXdebugRemoteHandler(null)
        );
    }

    /**
     * Generated from @assert ('dbgp') === 'dbgp'.
     *
     * @covers \InepZend\Util\PhpIni::setXdebugRemoteHandler
     */
    public function testSetXdebugRemoteHandler3()
    {
        $this->assertSame(
                'dbgp'
                , \InepZend\Util\PhpIni::setXdebugRemoteHandler('dbgp')
        );
    }

    /**
     * Generated from @assert () === 'dbgp'.
     *
     * @covers \InepZend\Util\PhpIni::getXdebugRemoteHandler
     */
    public function testGetXdebugRemoteHandler()
    {
        $this->assertSame(
                'dbgp'
                , \InepZend\Util\PhpIni::getXdebugRemoteHandler()
        );
    }

    /**
     * Generated from @assert () === 'localhost'.
     *
     * @covers \InepZend\Util\PhpIni::setXdebugRemoteHost
     */
    public function testSetXdebugRemoteHost()
    {
        $this->assertSame(
                'localhost'
                , \InepZend\Util\PhpIni::setXdebugRemoteHost()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setXdebugRemoteHost
     */
    public function testSetXdebugRemoteHost2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setXdebugRemoteHost(null)
        );
    }

    /**
     * Generated from @assert ('localhost') === 'localhost'.
     *
     * @covers \InepZend\Util\PhpIni::setXdebugRemoteHost
     */
    public function testSetXdebugRemoteHost3()
    {
        $this->assertSame(
                'localhost'
                , \InepZend\Util\PhpIni::setXdebugRemoteHost('localhost')
        );
    }

    /**
     * Generated from @assert () === 'localhost'.
     *
     * @covers \InepZend\Util\PhpIni::getXdebugRemoteHost
     */
    public function testGetXdebugRemoteHost()
    {
        $this->assertSame(
                'localhost'
                , \InepZend\Util\PhpIni::getXdebugRemoteHost()
        );
    }

    /**
     * Generated from @assert () === 9000.
     *
     * @covers \InepZend\Util\PhpIni::setXdebugRemotePort
     */
    public function testSetXdebugRemotePort()
    {
        $this->assertSame(
                9000
                , \InepZend\Util\PhpIni::setXdebugRemotePort()
        );
    }

    /**
     * Generated from @assert (null) === false.
     *
     * @covers \InepZend\Util\PhpIni::setXdebugRemotePort
     */
    public function testSetXdebugRemotePort2()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::setXdebugRemotePort(null)
        );
    }

    /**
     * Generated from @assert (9000) === 9000.
     *
     * @covers \InepZend\Util\PhpIni::setXdebugRemotePort
     */
    public function testSetXdebugRemotePort3()
    {
        $this->assertSame(
                9000
                , \InepZend\Util\PhpIni::setXdebugRemotePort(9000)
        );
    }

    /**
     * Generated from @assert () === 9000.
     *
     * @covers \InepZend\Util\PhpIni::getXdebugRemotePort
     */
    public function testGetXdebugRemotePort()
    {
        $this->assertSame(
                9000
                , \InepZend\Util\PhpIni::getXdebugRemotePort()
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::iniSet
     */
    public function testIniSet()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::iniSet()
        );
    }

    /**
     * Generated from @assert ('memory_limit', -1) === -1.
     *
     * @covers \InepZend\Util\PhpIni::iniSet
     */
    public function testIniSet2()
    {
        $this->assertSame(
                -1
                , \InepZend\Util\PhpIni::iniSet('memory_limit', -1)
        );
    }

    /**
     * Generated from @assert ('max_execution_time', 0) === 0.
     *
     * @covers \InepZend\Util\PhpIni::iniSet
     */
    public function testIniSet3()
    {
        $this->assertSame(
                0
                , \InepZend\Util\PhpIni::iniSet('max_execution_time', 0)
        );
    }

    /**
     * Generated from @assert ('memory_limit', 180, \InepZend\Util\PhpIni::OPERATION_EXACT) === 180.
     *
     * @covers \InepZend\Util\PhpIni::iniSet
     */
    public function testIniSet4()
    {
        $this->assertSame(
                180
                , \InepZend\Util\PhpIni::iniSet('memory_limit', 180, \InepZend\Util\PhpIni::OPERATION_EXACT)
        );
    }

    /**
     * Generated from @assert ('memory_limit', 10, \InepZend\Util\PhpIni::OPERATION_PLUS) === 190.
     *
     * @covers \InepZend\Util\PhpIni::iniSet
     */
    public function testIniSet5()
    {
        $this->assertSame(
                190
                , \InepZend\Util\PhpIni::iniSet('memory_limit', 10, \InepZend\Util\PhpIni::OPERATION_PLUS)
        );
    }

    /**
     * Generated from @assert ('memory_limit', 10, 'operacao_inexistente') === false.
     *
     * @covers \InepZend\Util\PhpIni::iniSet
     */
    public function testIniSet6()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::iniSet('memory_limit', 10, 'operacao_inexistente')
        );
    }

    /**
     * Generated from @assert () === false.
     *
     * @covers \InepZend\Util\PhpIni::iniGet
     */
    public function testIniGet()
    {
        $this->assertSame(
                false
                , \InepZend\Util\PhpIni::iniGet()
        );
    }

    /**
     * Generated from @assert ('memory_limit') === '190M'.
     *
     * @covers \InepZend\Util\PhpIni::iniGet
     */
    public function testIniGet2()
    {
        $this->assertSame(
                '190M'
                , \InepZend\Util\PhpIni::iniGet('memory_limit')
        );
    }

    /**
     * Generated from @assert ('max_execution_time') === '0'.
     *
     * @covers \InepZend\Util\PhpIni::iniGet
     */
    public function testIniGet3()
    {
        $this->assertSame(
                '0'
                , \InepZend\Util\PhpIni::iniGet('max_execution_time')
        );
    }

    /**
     * Generated from @assert ('max_execution_time', 'string') === '0'.
     *
     * @covers \InepZend\Util\PhpIni::iniGet
     */
    public function testIniGet4()
    {
        $this->assertSame(
                '0'
                , \InepZend\Util\PhpIni::iniGet('max_execution_time', 'string')
        );
    }

    /**
     * Generated from @assert ('max_execution_time', 'float') === 0.00.
     *
     * @covers \InepZend\Util\PhpIni::iniGet
     */
    public function testIniGet5()
    {
        $this->assertSame(
                0.00
                , \InepZend\Util\PhpIni::iniGet('max_execution_time', 'float')
        );
    }

}
